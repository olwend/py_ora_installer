CONTENT,IS_REF,LAST_OPER_ID,LAST_OPER_TIME,PARAMETER_ACTIVITIES,TEMPLATE_ID,VERSION                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     <endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""3rdPartyDirectPayment"">
      <name>3rd Party Direct Payment Business Process</name>
      <description>3rd Party Direct Payment Business Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","3rdPartyDirectPayment","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""3rdPartyPayment"">
      <name>3rd Party Payment Business Process</name>
      <description>3rd Party Payment Business Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""3rd Party Reference Number Validation"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation"" logic=""3rdPartyReferenceNumberValidation"">
            <transition method=""suspended"" type=""activity"" next=""3rd Party Reference Number Validation"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""3rd Payment"" name=""3rd Payment"" logic=""3rdPayment"">
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
			<criteria operator=""eq"" value=""exception"" />
	     </transition>
		 <transition method=""out"" type=""state"" next=""Expired"">
		    <criteria operator=""eq"" value=""expire"" />
		</transition>
            <transition method=""out"" type=""activity"" next=""Transaction Suspend"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""3rd Payment"">
               <criteria operator=""eq"" value=""resend payment request""/>
            </transition>
         </activity>
<activity id=""Transaction Suspend"" name=""Transaction Suspend""
				logic=""TransactionSuspend"">
				<transition method=""suspended"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
         <activity id=""Transaction Complete"" name=""Transaction Complete"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>

            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","3rdPartyPayment","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""3rdPartyPaymentFromBankAccount"">
		<name>3rd Party Payment From Bank Account Business Process</name>
		<description>3rd Party Payment From Bank Account Business Process</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""PaymentFromBankAccountBusinessInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""3rd Party Reference Number Validation"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>


			<activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation""
				logic=""3rdPartyReferenceNumberValidation"">
				<transition method=""suspend"" type=""activity""
					next=""3rd Party Reference Number Validation"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>


		<state name=""Pending Authorized"">

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Bank Cash In"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Bank Cash In"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized Pending Bank Cash In"">

			<listener id=""InterventionHandlerWhenPendingBankCashIn"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""state""
					next=""Authorized"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""Bank Cash In"" name=""Bank Cash In"" logic=""BankCashIn"">
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Bank Cash In Suspend"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Bank Cash In"">
					<criteria operator=""eq"" value=""resend bank cash in request"" />
				</transition>
			</activity>

			<activity id=""Bank Cash In Suspend"" name=""Bank Cash In Suspend""
				logic=""TransactionSuspend"">
				<transition method=""suspended"" type=""activity"" next=""Bank Cash In"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Transaction Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""3rd Payment"" name=""3rd Payment"" logic=""3rdPayment"">
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Suspend"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""resend payment request"" />
				</transition>
			</activity>

			<activity id=""Transaction Suspend"" name=""Transaction Suspend""
				logic=""TransactionSuspend"">
				<transition method=""suspended"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Transaction Complete"" name=""Transaction Complete""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
                            <transition method=""suspended"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEnding"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","3rdPartyPaymentFromBankAccount","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""3rdPartyPaymentWithConfirmation"">
      <name>3rd Party Payment With ConfirmationActivity Business Process</name>
      <description>3rd Party Payment With ConfirmationActivity Business
                            Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""3rd Party Reference Number Validation"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation"" logic=""3rdPartyReferenceNumberValidation"">
            <transition method=""suspended"" type=""activity"" next=""3rd Party Reference Number Validation"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Confirmation Activity"" name=""Confirmation Activity"" logic=""ProcessConfirmation"">
            <transition method=""suspended"" type=""activity"" next=""Confirmation Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""cancelled""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
              <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""3rd Payment"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""3rd Payment"" name=""3rd Payment"" logic=""3rdPayment"">
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Suspend"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""3rd Payment"">
               <criteria operator=""eq"" value=""resend payment request""/>
            </transition>
         </activity>
		 <transition method=""out"" type=""state"" next=""Expired"">
		    <criteria operator=""eq"" value=""expire"" />
		</transition>
<activity id=""Transaction Suspend"" name=""Transaction Suspend""
				logic=""TransactionSuspend"">
				<transition method=""suspended"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
         <activity id=""Transaction Complete"" name=""Transaction Complete"" logic=""TransactionComplete"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.ProcessSMSDeliveryActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","3rdPartyPaymentWithConfirmation","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""3rdPartyPaymentWithReversal"">
		<name>3rd Party Payment With Reversal Business Process</name>
		<description>3rd Party Payment With Reversal Business Process</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BusinessInitialization"" logictype=""chain"">`
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
                           <transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
                            <transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
                            <transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""3rd Party Reference Number Validation"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>


			<activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation""
				logic=""3rdPartyReferenceNumberValidation"">
				<transition method=""suspended"" type=""activity""
					next=""3rd Party Reference Number Validation"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>


		<state name=""Pending Authorized"">

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Transaction Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>


			<activity id=""3rd Payment"" name=""3rd Payment"" logic=""3rdPayment"" >
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Suspend"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>

				<transition method=""out"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""resend payment request"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""3rd Reversal"">
					<criteria operator=""eq"" value=""reversal"" />
				</transition>
			</activity>
			<activity id=""Transaction Suspend"" name=""Transaction Suspend""
				logic=""TransactionSuspend"">
				<transition method=""suspended"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""3rd Reversal"" name=""3rd Reversal"" logic=""3rdReversal"" >
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""3rd Reversal"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>

			</activity>


			<activity id=""Transaction Complete"" name=""Transaction Complete""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEnding"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","3rdPartyPaymentWithReversal","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""ActionProcess"">
      <name>Action Process.</name>
      <description>Action Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""ActionProcess"" name=""ActionProcess"" logic=""ActionProcess"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","ActionProcess","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""ActionWithAuthorizationProcess"">
      <name>Action with authorization and without reserve funds business process.</name>
      <description>Action with authorization and without reserve funds business process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""ActionProcess"" name=""ActionProcess"" logic=""ActionProcess"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","ActionWithAuthorizationProcess","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Air Time with Etop up by Voucher"">
      <name>Air Time with Etop up by Voucher.</name>
      <description>Air Time with Etop up by voucher Process Orchestration.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherRedeemingForOTC</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Declined.SendRechargeFailureNotifyActivity|3rd Payment.SendEtopUpActivity|","Air Time with Etop up by Voucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""AirTime"">
      <name>Air Time with Etop up.</name>
      <description>Air Time with Etop up Process Orchestration.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.TransactionFailureNotifyBuilder|Business Declined.SendRechargeFailureNotifyActivity|Business Expired.TransactionSuccessNotifyBuilder|Business Expired.SendRechargeFailureNotifyActivity|3rd Payment.SendEtopUpActivity|3rd Payment.TransactionFailureNotifyBuilderfor3rdParty|Transaction Suspend.TransactionSuspendNotifyBuilder|","AirTime","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""ApplyVoucher"">
      <name>Apply Voucher.</name>
      <description>Apply A Voucher Action.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateApplyVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ApplyVoucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""AutoReverseTransaction"">
      <name>Auto Reverse Transaction.</name>
      <description>Auto Reverse Transaction.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ReverseTransaction</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","AutoReverseTransaction","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""BankSwitchCashOut"">
		<name>BankSwitch CashOut Business Process</name>
		<description>BankSwitch CashOut Business Process</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>3rdPartyPaymentWithReversal</ref-template>

	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","BankSwitchCashOut","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""BankToCPSOffline"">
      <name>Bank To CPS Offline</name>
      <description>Bank To CPS Offline</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>BulkBusinessProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","BankToCPSOffline","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
<template id=""BankToCPSOfflineWithLinkedCard"">
<name>Bank To CPS Offline With Linked Card</name>
<description>Bank To CPS Offline With Linked Card</description>
<version>1</version>
<entry-point>Initiated</entry-point>
<ref-template>BulkBusinessProcess</ref-template>

</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","BankToCPSOfflineWithLinkedCard","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""BillPayment"">
      <name>Bill Payment Business Process</name>
      <description>Bill Payment Business Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BillRefNumberExternalValidationActivity|Business Cancelled.BSD.PayBill.ReversePayBillfor3rdPartyTimeoutActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","BillPayment","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""BillPaymentWithConfirmation"">
      <name>Bill Payment With Confiramtion Business Process</name>
      <description>Bill Payment With Confiramtion Business Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.BillConfirmationActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BillRefNumberExternalValidationActivity|3rd Payment.TransactionFailureNotifyBuilderfor3rdParty|Business Cancelled.BSD.PayBill.ReversePayBillfor3rdPartyTimeoutActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","BillPaymentWithConfirmation","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""BillPaymentWithConfirmationWithOD"">
		<name>BillPaymentWithConfirmationWithOD</name>
		<description>Pay Bill With OD Baseline With Confirmation Without CNS</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<!-- 业务开始，执行业务初始化操作 -->
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""PayBillODConfirm_BusinessInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""3rd Party Reference Number Validation"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>


			<activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation""
				logic=""PayBillODConfirm_3rdPartyReferenceNumberValidation"" logictype=""chain"">
				<transition method=""suspended"" type=""activity""
					next=""3rd Party Reference Number Validation"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>


		<state name=""Pending Authorized"">

			<!-- 检查该业务是否需要MakerChecker -->
			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Transaction Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""Send ODRecord"" name=""Send ODRecord"" logic=""BS.OD.ProcessSendODRecordByIsOverDraftActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Check Transaction Expired"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""suspended"" type=""activity"" next=""ODRecord Result"">
					<criteria operator=""eq"" value=""suspended""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

			<activity id=""ODRecord Result"" name=""ODRecord Result"" logic=""BS.OD.ProcessSendODRecordResultActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""activity"" next=""Check Transaction Expired"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

			<activity id=""Check Transaction Expired"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire""/>
				</transition>
			</activity>

			<activity id=""3rd Payment"" name=""3rd Payment"" logic=""PayBillODConfirm_BillRefNumberExternalValidation"" logictype=""chain"">
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Suspend"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""resend payment request"" />
				</transition>
			</activity>

			<!-- 处于suspend状态下，发送通知 -->
			<activity id=""Transaction Suspend"" name=""Transaction Suspend""
				logic=""TransactionSuspend"">
				<transition method=""suspended"" type=""activity"" next=""3rd Payment"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Check Transaction Expired Before Complete Funds"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire""/>
				</transition>
			</activity>

			<!-- 调用交易层的交易确认接口，完成交易 -->
			<activity id=""Transaction Complete"" name=""Transaction Complete""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Create C2OLink"" name=""Create C2OLink"" logic=""CreateC2OLinkActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Send ODConfirm With Completed"" name=""Send ODConfirm"" logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>
			<!-- 交易完成后处理 -->
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""PayBillODConfirm_BusinessEnding"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<activity id=""Send ODConfirm With Declined"" name=""Send ODConfirm"" logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge""/>

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">
			<activity id=""Send ODConfirm With Cancelled"" name=""Send ODConfirm"" logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge""/>

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">

			<activity id=""Send ODConfirm With Expired"" name=""Send ODConfirm"" logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge""/>

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.BillConfirmationActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BillRefNumberExternalValidationActivity|3rd Payment.TransactionFailureNotifyBuilderfor3rdParty|Business Cancelled.BSD.PayBill.ReversePayBillfor3rdPartyTimeoutActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","BillPaymentWithConfirmationWithOD","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""BulkBusinessProcess"">
       <name>Bulk Business Process</name>
       <description>Bulk Business Processs</description>
       <version>1</version>
       <entry-point>Initiated</entry-point>
       <state name=""Initiated"">
          <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Processed"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Processed"">
          <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Completed"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Completed"">
          <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
       </state>
       <state name=""Declined"">
          <!--It will move on to the next activity in case of exceptions-->
          <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BulkBusinessFailedProcessing""/>
       </state>
       <state name=""Cancelled"">
          <!--It will move on to the next activity in case of exceptions-->
          <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BulkBusinessFailedProcessing""/>
       </state>
       <state name=""Expired"">
          <!--It will move on to the next activity in case of exceptions-->
          <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
       </state>
    </template>
 </templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Initialization.BS.Process.CheckerTransactionParam|","BulkBusinessProcess","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""BulkVoucherIssuing"">
      <name>Bulk Voucher Issuing Business Process</name>
      <description>Bulk Voucher Issuing Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BulkVoucherIssuing_BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Voucher Issuing"" name=""Voucher Issuing"" logic=""BulkVoucherIssuing"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BulkBusinessProcess_BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""Cancelled""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BulkVoucherIssuingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BulkVoucherIssuingCancelledProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BulkVoucherIssuingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.BS.Bulk.Payment.InitiateConfigVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","BulkVoucherIssuing","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Buy Ticket Using Voucher"">
      <name>Buy Ticket Using Voucher.</name>
      <description>Buy Ticket Using Voucher.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherRedeeming</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.BS.Voucher.SetterVoucherTypeActivity|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Buy Ticket Using Voucher","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
 <templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""BuyAirtimeFromBankAccount"">
      <name>Buy Airtime From Bank Account.</name>
      <description>Buy Airtime From Bank Account.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
  	  <ref-template>3rdPartyPaymentFromBankAccount</ref-template>
	</template>
  </templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.SendRechargeFailureNotifyActivity|Business Expired.SendRechargeFailureNotifyActivity|Business Initialization.SetBankAccountTypeCashIn|3rd Payment.SendEtopUpActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|Bank Cash In.BS.Reconcile.SendBankCashInRequestBuyAirtime|Bank Cash In Suspend.TransactionSuspendNotifyBuilder|Business Declined.BS.Reconcile.SendBankCashInReversalRequestBuyAirtime|Business Cancelled.BS.Reconcile.SendBankCashInReversalRequestBuyAirtime|Business Expired.BS.Reconcile.SendBankCashInReversalRequestBuyAirtime|","BuyAirtimeFromBankAccount","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""BuyAirtimeFromBankAccountViaBank"">
      <name>Buy Airtime From Bank Account Via Bank</name>
      <description>Buy Airtime From Bank Account Via Bank</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
  </template>
  </templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.SendRechargeFailureNotifyActivity|Business Expired.SendRechargeFailureNotifyActivity|Business Initialization.SetBankAccountTypeCashIn|3rd Payment.SendEtopUpActivity|3rd Payment.TransactionFailureNotifyBuilderfor3rdParty|Transaction Suspend.TransactionSuspendNotifyBuilder|","BuyAirtimeFromBankAccountViaBank","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""BuyGoodsWithConfirmation"">
		<name>Buy Goods With Confiramtion Business Process</name>
		<description>Buy Goods With Confiramtion Business Process</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>3rdPartyPayment</ref-template>

	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.BSD.Merchant.BuyGoodsConfirmationActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BSD.Merchant.BuyGoodsValidationSend|3rd Payment.TransactionFailureNotifyBuilderfor3rdParty|Transaction Suspend.TransactionSuspendNotifyBuilder|","BuyGoodsWithConfirmation","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <template id=""BuyGoodsWithConfirmationWithOD"">
    <name>Buy Goods With OD.</name>
    <description>buy goods with od transaction process template.</description>
    <version>1</version>
    <entry-point>Initiated</entry-point>

    <state name=""Initiated"">

      <!-- 业务开始，执行业务初始化操作 -->
      <activity id=""Business Initialization"" name=""Business Initialization""
            logic=""BusinessInitialization"" logictype=""chain"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Validated"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
      </activity>
    </state>

    <state name=""Validated"">

      <activity id=""Transaction Reserve"" name=""Transaction Reserve""
            logic=""TransactionReserve"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Check Authorization"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>


      <activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation""
            logic=""3rdPartyReferenceNumberValidation"">
        <transition method=""suspended"" type=""activity""
              next=""3rd Party Reference Number Validation"">
          <criteria operator=""eq"" value=""suspend"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>

        <transition method=""out"" type=""state"" next=""Pending Authorized"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>

      <activity id=""Check Authorization"" name=""Check Authorization""
            logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
        <transition method=""out"" type=""state"" next=""Pending Authorized"">
          <criteria operator=""eq"" value=""true"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Authorized"">
          <criteria operator=""eq"" value=""false"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
      </activity>

    </state>


    <state name=""Pending Authorized"">


      <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"" logictype=""chain"">
        <transition method=""suspended"" type=""activity"" next=""Raise Task"">
          <criteria operator=""eq"" value=""raise success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Authorized"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Expired"">
          <criteria operator=""eq"" value=""expire"" />
        </transition>
      </activity>


    </state>

    <state name=""Authorized"">

      <listener id=""Intervention Handler"" name=""Intervention Handler""
            logic=""InterventionHandleActivity"" logictype=""bean"">
        <transition name=""complete"" method=""out"" type=""activity""
              next=""Transaction Complete"">
          <criteria operator=""eq"" value=""1"" />
        </transition>
        <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""2"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
      </listener>


      <activity id=""Send ODRecord"" name=""Send ODRecord""
            logic=""BS.OD.ProcessSendODRecordByIsOverDraftActivity"" logictype=""bridge"">
        <transition method=""out"" type=""activity"" next=""Check Transaction Expired"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""suspended"" type=""activity"" next=""ODRecord Result"">
          <criteria operator=""eq"" value=""suspended"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
      </activity>

      <activity id=""ODRecord Result"" name=""ODRecord Result""
            logic=""BS.OD.ProcessSendODRecordResultActivity"" logictype=""bridge"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""out"" type=""activity"" next=""Check Transaction Expired"">
          <criteria operator=""eq"" value=""success""/>
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
      </activity>

      <activity id=""Check Transaction Expired"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
        <transition method=""out"" type=""state"" next=""Expired"">
          <criteria operator=""eq"" value=""expire""/>
        </transition>
      </activity>

      <activity id=""3rd Payment"" name=""3rd Payment"" logic=""BuyGoodsWithConfirmation_3rdPayment"">
        <transition method=""out"" type=""activity"" next=""Transaction Complete"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Expired"">
          <criteria operator=""eq"" value=""expire"" />
        </transition>
        <transition method=""out"" type=""activity"" next=""Transaction Suspend"">
          <criteria operator=""eq"" value=""suspend"" />
        </transition>
        <transition method=""out"" type=""activity"" next=""3rd Payment"">
          <criteria operator=""eq"" value=""resend payment request"" />
        </transition>
      </activity>

      <!-- 处于suspend状态下，发送通知 -->
      <activity id=""Transaction Suspend"" name=""Transaction Suspend""
            logic=""TransactionSuspend"">
        <transition method=""suspended"" type=""activity"" next=""3rd Payment"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>

      <activity id=""Check Transaction Expired Before Complete Funds"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
        <transition method=""out"" type=""state"" next=""Expired"">
          <criteria operator=""eq"" value=""expire""/>
        </transition>
      </activity>



      <!-- 调用交易层的交易确认接口，完成交易 -->
      <activity id=""Transaction Complete"" name=""Transaction Complete""
            logic=""TransactionComplete"">
        <transition method=""out"" type=""state"" next=""Completed"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
      </activity>

    </state>

    <state name=""Completed"">

      <activity id=""Send ODConfirm With Completed"" name=""Send ODConfirm""
            logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- 交易完成后处理 -->
			<activity id=""Business Completion"" name=""Business Ending""
					  logic=""BuyGoodsWithConfirmation_BusinessEnding"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<activity id=""Send ODConfirm With Declined"" name=""Send ODConfirm""
					  logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge"" />

			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
					  logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<activity id=""Send ODConfirm With Cancelled"" name=""Send ODConfirm""
					  logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge"" />

			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
					  logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">

			<activity id=""Send ODConfirm With Expired"" name=""Send ODConfirm""
					  logic=""BS.OD.ProcessSendODConfirmByIsOverDraftActivity"" logictype=""bridge"" />

			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
					  logic=""BusinessExpiredProcessing"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.BSD.Merchant.BuyGoodsConfirmationActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BSD.Merchant.BuyGoodsValidationSend|3rd Payment.TransactionFailureNotifyBuilderfor3rdParty|Transaction Suspend.TransactionSuspendNotifyBuilder|","BuyGoodsWithConfirmationWithOD","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""CCHReverseTransaction"">
      <name>CCH Reverse Transaction.</name>
      <description>CCH Reverse Transaction Template.</description>
      <version>1.0.0</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ReverseTransaction</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Raise Task.BS.Reverse.SendPendingNotification|","CCHReverseTransaction","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""CPSToBankOffline"">
      <name>CPS To Bank Offline</name>
      <description>CPS To Bank Offline</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>BulkBusinessProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","CPSToBankOffline","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""CashUp"">
      <name>Cash Up.</name>
      <description>Cash Up Transaction.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","CashUp","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Charge for Pre-Validation"">
      <name>Charge for Pre-Validation</name>
      <description>Charge for Pre-Validation Transaction.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Charge for Pre-Validation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""CommissionTransfer"">
      <name>Commission Transfer with Authorized Mode.</name>
      <description>Commission Transfer with Authorized Process
			Orchestration.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">

         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">

         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""BS.Commission.CommissionInterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Check Transaction Status"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>

         <activity id=""Waiting authorization"" name=""Waiting authorization"" logic=""BS.Commission.WaitingAuthorizationActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""state"" next=""Process Task ack Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Process Task ack Activity"" name=""Process Task ack Activity"" logic=""ProcessUserTaskAckActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>

         <activity id=""Check Transaction Status"" name=""Check Transaction Status"" logic=""BS.Commission.CheckTransactionStatusActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>

         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
           <transition method=""suspended"" type=""state""
          next=""Process Task ack Activity"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
         </activity>
      </state>
      <state name=""Processed"">

         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Update Commission Task Status"" name=""Update Commission Task Status"" logic=""BS.Commission.UpdateCommissionStatus4InterventionActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>

         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
         <activity id=""Update Commission Task Status When Declined"" name=""Update Commission Task Status When Declined"" logic=""BS.Commission.UpdateCommissionStatus4InterventionActivity"" logictype=""bean""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
         <activity id=""Update Commission Task Status When Cancelled"" name=""Update Commission Task Status When Cancelled"" logic=""BS.Commission.UpdateCommissionStatus4InterventionActivity"" logictype=""bean""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","CommissionTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <states>
      <state id=""Initiated"" type=""temp"" calfee=""true""/>
      <state id=""Validated"" type=""temp""/>
      <state id=""Pending Authorized"" type=""temp""/>
      <state id=""Authorized"" type=""temp""/>
      <state id=""Processed"" type=""temp""/>
      <state id=""Completed"" type=""success""/>
      <state id=""Declined"" type=""failure""/>
      <state id=""Cancelled"" type=""failure""/>
      <state id=""Expired"" type=""failure"" orderstate=""Expired""/>
      <state id=""CalFeeExt"" type=""success"" calfeeext=""true""/>
      <state id=""Authorized With ODRecord"" type=""temp""/>
      <state id=""Authorized Pending Customer Registration"" type=""temp""/>
      <state id=""Authorized Pending Customer Complete KYC"" type=""temp""/>
      <state id=""Authorized Pending SMS Confirm"" type=""temp""/>
      <state id=""Authorized Pending Bank Cash In"" type=""temp"" />
      <state id=""Pending 3rd Confirm"" type=""temp"" />
       <state id=""Authorized Pending ResellerFee Transaction"" type=""temp"" />
	 <state id=""Authorized Pending Query ResellerAmount Transaction"" type=""temp"" />
	 <state id=""Authorized Pending Reverse Transaction"" type=""temp"" />
   </states>
</templates>","N","","","","Common Template","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Direct Debit Transfer"">
      <name>Direct Debit Transfer</name>
      <description>Direct debit transfer.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Direct Debit Transfer","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""DirectDebit4APIConfirm"">
		<name>Direct Debit Transaction For API Confirm</name>
		<description>Direct Debit Transaction For API Confirm.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>TransferWithPending</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","DirectDebit4APIConfirm","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DirectReverseTransaction"">
      <name>Direct Reverse Transaction Business process.</name>
      <description>Direct Reverse Transaction Business process.</description>
      <version>1.0.0</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""ReversalBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <!--Reverse-->
         <activity id=""Business Validation"" name=""Business Validation"" logic=""ReversalBusinessValidation"">
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <!--Reverse-->
         <activity id=""Business Process"" name=""Business Process"" logic=""ReversalBusinessProcess"">
            <transition method=""out"" type=""activity"" next=""Transfer Funds For Reversal"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds For Reversal"" name=""Transfer Funds For Reversal"" logic=""TransferFundsForReversal"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""ReversalBusinessEnding""/>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""ReversalBusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""ReversalBusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""ReversalBusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","DirectReverseFinance","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""DirectReverseTransactionWithAuthorization"">
       <name>Direct Reverse Transaction With Authorization Business process.</name>
       <description>Direct Reverse Transaction With Authorization Business process.</description>
       <version>1.0.0</version>
       <entry-point>Initiated</entry-point>
       <state name=""Initiated"">
          <activity id=""Business Initialization"" name=""Business Initialization"" logic=""ReversalBusinessInitialization"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""failure""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Validated"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Validated"">
          <!--Reverse-->
          <activity id=""Business Validation"" name=""Business Validation"" logic=""ReversalBusinessValidation"">
             <transition method=""out"" type=""activity"" next=""Check Authorization"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </activity>

          <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
             <transition method=""out"" type=""state"" next=""Pending Authorized"">
                <criteria operator=""eq"" value=""true""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""false""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </activity>
       </state>
       <state name=""Pending Authorized"">
          <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
             <transition method=""suspended"" type=""activity"" next=""Raise Task"">
                <criteria operator=""eq"" value=""raise success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""failure""/>
             </transition>
          </activity>
       </state>
       <state name=""Authorized"">
          <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
             <transition name=""complete"" method=""out"" type=""activity"" next=""Reverse Business Process"">
                <criteria operator=""eq"" value=""1""/>
             </transition>
             <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""2""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </listener>

          <!--Reverse-->
          <activity id=""Reverse Business Process"" name=""Reverse Business Process"" logic=""ReversalBusinessProcess"">
             <transition method=""out"" type=""activity"" next=""Transfer Funds For Reversal"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>

          <activity id=""Transfer Funds For Reversal"" name=""Transfer Funds For Reversal"" logic=""TransferFundsForReversal"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Completed"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>

       <state name=""Completed"">
          <activity id=""Business Completion"" name=""Business Ending"" logic=""ReversalBusinessEnding""/>
       </state>
       <state name=""Declined"">
          <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""ReversalBusinessFailedProcessing""/>
       </state>
       <state name=""Cancelled"">
          <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""ReversalBusinessFailedProcessing""/>
       </state>
       <state name=""Expired"">
          <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""ReversalBusinessFailedProcessing""/>
       </state>
    </template>
 </templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","DirectReverseTransactionWithAuthorization","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""DirectToLocalRemitancePartner"">
        <name>Direct to Local Remittance Partner</name>
        <description>Direct to Local Remittance Partner.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
		<ref-template>3rdPartyPayment</ref-template>

    </template>

</templates>","Y","","","Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Reversal.BS.Reconcile.SendReversal2FIOrgRequestActivity|","DirectToLocalRemitancePartner","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DirectTransfer"">
      <name>Direct Transfer Business Process</name>
      <description>Direct Transfer Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","DirectTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DirectTransferWithOutboundCallback"">
      <name>Direct Transfer With OutboundCallback Business Process</name>
      <description>Direct Transfer With OutboundCallback Business Processs</description>
      <version>1</version>
      <modle>DirectTransfer_With_Confirm</modle>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
	     <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Send OutBound Msg Wait Callback"" name=""SendOutboundMsgWaitCallback"" logic=""SendOutboundMsgWaitCallback"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Send Notification Wait Callback"" name=""SendNotificationWaitCallback"" logic=""SendNotificationWaitCallback"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","DirectTransferWithOutboundCallback","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Disburse Profit Manually without Confirmation"">
      <name>Disburse Profit Manually without Confirmation.</name>
      <description>Disburse Profit Manually without Confirmation</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Disburse Profit Manually without Confirmation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Dompetku Bill Payment"">
      <name>Dompetku Bill Payment.</name>
      <description>Indosat bill payment transaction process template.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransferWithOutboundCallback</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","Dompetku Bill Payment","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""Dompetku Cash In"">
		<name>Dompetku Cash In.</name>
		<description>Indosat cash in transaction process template.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>DirectTransferWithOutboundCallback</ref-template>

	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","Dompetku Cash In","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""Dompetku Cash Out"">
		<name>Dompetku Cash Out.</name>
		<description>Indosat cash out transaction process template.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>DirectTransferWithOutboundCallback</ref-template>

	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","Dompetku Cash Out","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DompetkuAllocation"">
      <name>Dompetku Allocation.</name>
      <description>Dompetku Allocation.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithOutboundCallback</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendDompetkuAllocateRequestActivity|","DompetkuAllocation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""Dormant Fee"">
		<name>Dormant Fee Process</name>
		<description>Dormant Fee Process</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
        <ref-template>DirectTransfer</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Dormant Fee","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DormantAccountCleanTransfer"">
      <name>Dormant Account Clean Transfer Business Process</name>
      <description>Dormant Account Clean Transfer Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BS.Dormant.DormantBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionFailureNotifyBuilder|","DormantAccountCleanTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DormantRefund"">
      <name>Dormant Refund Business Process</name>
      <description>Dormant Refund Business Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""RefundBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionFailureNotifyBuilder|","DormantRefund","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DormantRefundWithAuthorized"">
      <name>Dormant Refund With Authorized.</name>
      <description>Dormant Refund With Authorized Without Limit Check.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DormantRefund</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","DormantRefundWithAuthorized","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DormantRefundWithLimitCheck"">
      <name>Dormant Refund With Limit Check.</name>
      <description>Dormant Refund With Limit Check.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DormantRefund</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","DormantRefundWithLimitCheck","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""DormantRefundWithVoucher"">
      <name>Dormant Refund With Voucher Business Process</name>
      <description>Dormant Refund With Voucher Business Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BS.Dormant.RefundWithVoucherBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Voucher Issuing"" name=""Voucher Issuing"" logic=""BS.Dormant.VoucherIssuing"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BS.Dormant.SendDormantCustomerNameNotify"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BS.Dormant.VoucherIssuingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BS.Dormant.VoucherIssuingFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.BS.Dormant.InitiateIssueVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","DormantRefundWithVoucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""EVCAirtimeTopup"">
      <name>Airtime Top-up Without SMSConfirm Message.</name>
      <description>Airtime Top-up Without SMSConfirm Message.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.SendRechargeFailureNotifyActivity|Business Expired.SendRechargeFailureNotifyActivity|","EVCAirtimeTopup","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""EVCAirtimeTopupWithSMSConfirm"">
      <name>Airtime Top-up With SMSConfirm Message.</name>
      <description>Airtime Top-up With SMSConfirm Message.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPaymentWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.SendRechargeFailureNotifyActivity|Business Expired.SendRechargeFailureNotifyActivity|Confirmation Activity.CheckPendingSMSConfirm4EVCActivity|Confirmation Activity.ProcessSendSMSConfirm4EVCAvtivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","EVCAirtimeTopupWithSMSConfirm","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""EVCAirtimeTransfer"">
      <name>Airtime Transfer Without SMSConfirm Message.</name>
      <description>Airtime Transfer Without SMSConfirm Message.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","EVCAirtimeTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""EVCAirtimeTransferWithSMSConfirm"">
      <name>Airtime Transfer With SMSConfirm Message.</name>
      <description>Airtime Transfer With SMSConfirm Message.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.CheckPendingSMSConfirm4EVCActivity|Confirmation Activity.ProcessSendSMSConfirm4EVCAvtivity|","EVCAirtimeTransferWithSMSConfirm","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""EVCExternalWalletTopup"">
		<name>EVCExternalWalletTopup</name>
		<description>EVCExternalWalletTopup</description>
		<version>1</version>
        <modle>DirectTransfer_With_Confirm</modle>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""EVCExternalWalletTopupBusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Check EVC External Wallet Transaction Request"" name=""Check EVC External Wallet Transaction Request""
				logic=""CheckEVCExternalTransactionActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""EVCTopUPValidationRequest"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""EVCTopUPValidationRequest"" name=""EVCTopUPValidationRequest""
			  logic=""EVCEWTopUPValidationRequest"">
			    <transition method=""suspended"" type=""activity"" next=""EVCTopUPValidationRequest"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Reserve"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""ResellerAmountTransactionRequest"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""ResellerAmountTransactionRequest"" name=""ResellerAmountTransactionRequest""
			  logic=""ResellerAmountTransactionRequest"">
				<transition method=""out"" type=""state"" next=""Authorized Pending ResellerFee Transaction"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""ResellerAmountTransactionRequest"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Query ResellerAmount Transaction"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized Pending ResellerFee Transaction"">

			<listener id=""InterventionHandlerWhenResellerFeeTransaction"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""state""
					next=""Pending Authorized"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""ResellerFeeTransactionRequest"" name=""ResellerFeeTransactionRequest""
			  logic=""SendResellerFeeTransactionActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""CheckerResellerFeeTransactionResult"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
			</activity>

			<activity id=""CheckerResellerFeeTransactionResult"" name=""CheckerResellerFeeTransactionResult""
			  logic=""CheckExternalWalletTransactionResultActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""QueryResellerFeeTransactionStatusRequest"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>


			<activity id=""QueryResellerFeeTransactionStatusRequest"" name=""QueryResellerFeeTransactionStatusRequest""
			  logic=""TopUpQueryFeeTransactionStatusActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""suspended"" type=""activity""
                  next=""CheckTopUpQueryFeeTransStatusResult"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
			</activity>

			<activity id=""CheckTopUpQueryFeeTransStatusResult"" name=""CheckTopUpQueryFeeTransStatusActivity""
			  logic=""CheckTopUpQueryFeeTransStatusActivity""  logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>


			<activity id=""ResellerFeeTransactionWithInternention"" name=""ResellerFeeTransactionWithInternention""
              logic=""ProcessAuthorizationWithoutTask"">
                <transition method=""suspended"" type=""activity""
                  next=""ResellerFeeTransactionWithInternention"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>

		</state>


		<state name=""Authorized Pending Query ResellerAmount Transaction"">

			<listener id=""InterventionHandlerWhenResellerAmountTransaction""
				name=""Intervention Handler"" logic=""InterventionHandleActivity""
				logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""state""
					next=""Authorized Pending ResellerFee Transaction"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""QueryResellerAmountTransactionStatusRequest"" name=""QueryResellerAmountTransactionStatusRequest""
			  logic=""QueryResellerAmountTransactionStatusRequest"">
				<transition method=""out"" type=""state"" next=""Authorized Pending ResellerFee Transaction"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""suspended"" type=""activity""
                  next=""QueryResellerAmountTransactionStatusRequest"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

			<activity id=""ResellerAmountTransactionWithInternention"" name=""ResellerAmountTransactionWithInternention""
              logic=""ProcessAuthorizationWithoutTask"">
                <transition method=""suspended"" type=""activity""
                  next=""ResellerAmountTransactionWithInternention"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>
		</state>

		<state name=""Pending Authorized"">

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""TopUPConfirmationRequest"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""TopUPConfirmationRequest"" name=""TopUPConfirmationRequest"" logic=""TopUPConfirmationRequest"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""TopUPConfirmationRequest"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Processed"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

		</state>

		<state name=""Processed"">

			<activity id=""queryEVCTopUPConfirmation"" name=""queryEVCTopUPConfirmation""
				logic=""3rdPayment"" logictype=""chain"">

				<transition method=""suspended"" type=""activity"" next=""queryEVCTopUPConfirmation"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized Pending Reverse Transaction"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state""
					next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized Pending Reverse Transaction"">

			<listener id=""InterventionHandlerWhenReverseTransaction"" name=""InterventionHandlerWhenReverseTransaction""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""state""
					next=""Cancelled"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""SendReverseResellerAmountTransactionRequest"" name=""SendReverseResellerAmountTransactionRequest""
			  logic=""ReverseResellerAmountTransactionRequest"">
			    <transition method=""suspended"" type=""activity""
                  next=""SendReverseResellerAmountTransactionRequest"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
				<transition method=""out"" type=""activity"" next=""SendReverseResellerFeeTransactionRequest"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""SendReverseResellerFeeTransactionRequest"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""SendReverseResellerFeeTransactionRequest"" name=""SendReverseResellerFeeTransactionRequest""
			  logic=""ProcessReverseResellerFeeTransaction"" logictype=""bean"">
			    <transition method=""suspended"" type=""activity""
                  next=""CheckExternalWalletReversalResultActivity"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
				<transition method=""out"" type=""activity"" next=""ReverseTransactionResult"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""CheckExternalWalletReversalResultActivity"" name=""CheckExternalWalletReversalResultActivity""
			  logic=""CheckExternalWalletReversalResultActivity"" logictype=""bean"">

				<transition method=""out"" type=""activity"" next=""ReverseTransactionResult"">
					<criteria operator=""eq"" value=""success"" />
				</transition>

				<transition method=""out"" type=""activity"" next=""ReverseTransactionResult"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

			</activity>

			<activity id=""ReverseTransactionResult"" name=""ReverseTransactionResult""
			  logic=""SetterReverseTransactionResult"" logictype=""bean"">

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""ReverseTransactionWithInternention"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
			</activity>

			<activity id=""ReverseTransactionWithInternention"" name=""ReverseTransactionWithInternention""
              logic=""ProcessAuthorizationWithoutTask"">
                <transition method=""suspended"" type=""activity""
                  next=""ReverseTransactionWithInternention"">
                   <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

		</state>

		<state name=""Completed"">

		    <activity id=""Transaction Complete"" name=""Transaction Complete""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Business Completion"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEnding"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""EVCExternalWalletBusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" />

		</state>
	</template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|ResellerAmountTransactionRequest.SendResellerAmountTransactionActivity|QueryResellerAmountTransactionStatusRequest.TopUpQueryAmountTransactionStatusActivity|ResellerFeeTransactionRequest.SendResellerFeeTransactionActivity|QueryResellerFeeTransactionStatusRequest.TopUpQueryFeeTransactionStatusActivity|SendReverseResellerAmountTransactionRequest.ProcessReverseResellerAmountTransaction|SendReverseResellerFeeTransactionRequest.ProcessReverseResellerFeeTransaction|","EVCExternalWalletTopup","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""EmoneyIssue"">
      <name>Finance EmoneyIssue Transfer.</name>
      <description>Finance EmoneyIssue Transfer.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithInterventionDirectPending</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","EmoneyIssue","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Fix Saving From KCB Saving Account"">
		<name>FSI KCB Fix Saving From KCB Saving Account</name>
		<description>FSI KCB Fix Saving Via Saving Account.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

        <state name=""Validated"">

            <activity id=""FSI Authorization"" name=""FSI Authorization""
                logic=""FSIAuthorization"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
            <activity id=""Transaction Reserve"" name=""Transaction Reserve""
                logic=""TransactionReserve"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>

            <activity id=""Check Authorization"" name=""Check Authorization""
                logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
                <transition method=""out"" type=""state"" next=""Pending Authorized"">
                    <criteria operator=""eq"" value=""true"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""false"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

        </state>

        <state name=""Pending Authorized"">
            <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
                <transition method=""suspended"" type=""activity"" next=""Raise Task"">
                    <criteria operator=""eq"" value=""raise success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>
        </state>

        <state name=""Authorized"">

            <listener id=""Intervention Handler"" name=""Intervention Handler""
                logic=""InterventionHandleActivity"" logictype=""bean"">
                <transition name=""complete"" method=""out"" type=""activity""
                    next=""Complete Funds"">
                    <criteria operator=""eq"" value=""1"" />
                </transition>
                <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""2"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </listener>

            <!-- Send fix saving to AG -->
            <activity id=""Send Fix Saving to AG"" name=""Send Fix Saving to AG""
                logic=""SendKCBFixedSavingActivateKCBRequest"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- If Send failure or timeout, we need to suspend the KCB TX -->
            <activity id=""Check If Suspend Fsi KCB TX On Failure"" name=""Check If Suspend Fsi KCB TX On Failure""
                logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
                <transition method=""out"" type=""activity""
                    next=""Send Failure Authorized Notification"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Receive Fix Saving Response"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

            <!-- Just send a notice in need if failure response received and suspend
                the KCB TX -->
            <activity id=""Send Failure Authorized Notification"" name=""Send Authorized Notification""
                logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB TX On Failure"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB TX On Failure"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- Receive fix saving response from AG -->
            <activity id=""Receive Fix Saving Response"" name=""Receive Fix Saving Response""
                logictype=""bridge"" logic=""ReceiveKCBFixSavingResponseActivity"">
                <transition method=""out"" type=""activity"" next=""Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
            </activity>

            <activity id=""Check Transaction Expired Before Complete Funds""
                name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
                logictype=""bean"">
                <transition method=""out"" type=""state"" next=""Expired"">
                    <criteria operator=""eq"" value=""expire"" />
                </transition>
            </activity>

            <activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
                <transition method=""out"" type=""state"" next=""Completed"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>

        </state>

        <!-- äº¤æ˜“å®Œæˆ -->
        <state name=""Completed"">
            <activity id=""Business Completion"" name=""Business Ending""
                logic=""FSIKCBBusinessEnding"">
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>
        </state>

        <!-- äº¤æ˜“å¤±è´¥ -->
        <state name=""Declined"">
            <activity id=""Business Declined"" name=""BusinessFailedProcessing""
                logic=""FSIBusinessFailedProcessing"" />
        </state>

        <!-- äº¤æ˜“å–æ¶ˆ -->
        <state name=""Cancelled"">
            <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
                logic=""FSIKCBBusinessFailedProcessing"" />
        </state>

        <state name=""Expired"">
            <!-- It will move on to the next activity in case of exceptions -->
            <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
                logic=""BusinessExpiredProcessing"" logictype=""chain""/>
        </state>

    </template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Fix Saving From KCB Saving Account","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Fix Savings Termination To KCB"">
		<name>FSI KCB Fix Savings Termination To KCB</name>
		<description>FSI KCB Fix Savings Termination To KCB</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Common Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

			<activity id=""Common Authorization"" name=""Common Authorization""
				logic=""CommonAuthorization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Pending 3rd Confirm"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<!-- å‘é€ TARGET_SAVING_TERMINATION åˆ°å­˜è´·ç³»ç»Ÿ,èŽ·å–PRINCIPAL_INTEREST ç„¶åŽåˆ·æ–°ä¸Šä¸‹æ–‡ä¸­amount-->
		<state name=""Pending 3rd Confirm"">
			<listener id=""Intervention Handler for Pending 3rd Confirm"" name=""Intervention Handler for Pending 3rd Confirm""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""FSI Authorization"" name=""FSI Authorization""
				logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Send FSI KCB Savings Termination To KCB Request""
				name=""Send FSI KCB Savings Termination To KCB Request"" logic=""SendFsiKCBFixSavingsTerminationToKCBRequest"">
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB Savings Termination TX On Failure"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- If Send failure or timeout, we need to send fail notification and cancel transaction-->
			<activity id=""Check If Suspend Fsi KCB Savings Termination TX On Failure""
				name=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""state""
					next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive FSI KCB Savings Termination To KCB Response"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>


			<!-- èŽ·å– KCBä¸­ä¼ è¿‡æ¥çš„ PRINCIPAL_INTEREST ç„¶åŽæ›´æ–°ä¸Šä¸‹æ–‡ amount å’ŒactualAmount-->
			<activity id=""Receive FSI KCB Savings Termination To KCB Response""
				name=""Receive FSI KCB Savings Termination To KCB Response"" logic=""ReceiveFsiKCBSavingsTerminationToKCBResponseActivity""
				logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

		</state>

		<state name=""Validated"">

			<!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			 <activity id=""Send FSI KCB Savings Withdraw From KCB Request""
                name=""Send FSI KCB Savings Withdraw From KCB Request"" logic=""SendFsiKCBSavingsWithdrawFromKCBRequest"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- If Send failure or timeout, we need to suspend the KCB TX -->
            <activity id=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure""
                name=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure""
                logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
                <transition method=""out"" type=""activity""
                    next=""Send Failure Authorized Notification"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Receive FSI KCB Savings Withdraw From KCB Response"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

            <!-- Just send a notice in need if failure response received and suspend
                the KCB TX -->
            <activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification""
                logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <activity id=""Receive FSI KCB Savings Withdraw From KCB Response""
                name=""Receive FSI KCB Savings Withdraw From KCB Response"" logic=""ReceiveFsiKCBSavingsWithdrawFromKCBResponseActivity""
                logictype=""bridge"">
                <transition method=""out"" type=""activity"" next=""Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>

			<activity id=""Check Transaction Expired Before Complete Funds""
				name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
				logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>


			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""FSIKCBBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" logictype=""chain"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Fix Savings Termination To KCB","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Loan Repayment"">
		<name>FSI KCB Loan Repayment</name>
		<description>FSI Loan Repayment With FI Confirm Message.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""KCBFSILoanRepayment_BusinessInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">
			<activity id=""FSI Authorization"" name=""FSI Authorization""
				logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
			<!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
		</state>

		<state name=""Pending Authorized"">
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>
		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<!-- Send FSI KCB Loan Repayment Request to KCB -->
			<activity id=""Send FSI KCB Loan Repayment Request to KCB""
				name=""Send FSI KCB Loan Repayment Request to KCB"" logic=""SendFsiKCBLoanRepaymentRequest"">
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB Loan Repayment TX On Failure"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- If Send failure or timeout, we need to suspend the KCB TX -->
			<activity id=""Check If Suspend Fsi KCB Loan Repayment TX On Failure""
				name=""Check If Suspend Fsi KCB Loan Repayment TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""activity""
					next=""Send Failure Authorized Notification"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive Payback Loan Response"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification""
				logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB Loan Repayment TX On Failure"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB Loan Repayment TX On Failure"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Receive Payback Loan Response"" name=""Receive Payback Loan Response""
				logictype=""bridge"" logic=""BS.FSI.ReceiveKCBLoanPaymentResponseActivity"">
				<transition method=""out"" type=""activity"" next=""Complete Funds"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

			<activity id=""Check Transaction Expired Before Complete Funds""
				name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
				logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>


			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""FSIKCBLoanRepayment_FSIBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""FSIBusinessFailedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" logictype=""chain"" />

		</state>


	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.FSIPaymentSuccessNotifyBuilder|Business Completion.FSIOverPaymentSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Initialization.SetRelatedReasonType|","FSI KCB Loan Repayment","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Savings Deposit To KCB"">
		<name>FSI KCB Savings Deposit To KCB</name>
		<description>FSI KCB Savings Deposit To KCB</description>
		<version>2</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization"" logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""FSI Authorization"" name=""FSI Authorization"" logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

			<!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
			<activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

		</state>

		<state name=""Pending Authorized"">
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
			</activity>
		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity"" next=""Complete Funds"">
					<criteria operator=""eq"" value=""1""/>
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</listener>

			<activity id=""Send FSI KCB Savings Deposit To KCB Request"" name=""Send FSI KCB Savings Deposit To KCB Request"" logic=""SendFsiKCBSavingsDepositToKCBRequest"">
				<transition method=""suspended"" type=""activity"" next=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"">
					<criteria operator=""eq"" value=""suspend""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>


			<!-- If Send failure or timeout, we need to suspend the KCB TX -->
			<activity id=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"" name=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""activity"" next=""Send Failure Authorized Notification"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""activity"" next=""Receive FSI KCB Savings Deposit To KCB Response"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
			</activity>

			<!-- Just send a notice in need if failure response received and suspend
				the KCB TX -->
			<activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification"" logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
				<transition method=""suspended"" type=""activity"" next=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""suspended"" type=""activity"" next=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>


			<activity id=""Receive FSI KCB Savings Deposit To KCB Response"" name=""Receive FSI KCB Savings Deposit To KCB Response"" logic=""ReceiveFsiKCBSavingsDepositToKCBResponseActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Complete Funds"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
			</activity>

			<activity id=""Check Transaction Expired Before Complete Funds"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire""/>
				</transition>
			</activity>


			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending"" logic=""FSIKCBBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""FSIKCBBusinessFailedProcessing""/>
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""FSIKCBBusinessFailedProcessing""/>
		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing"" logictype=""chain""/>

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Savings Deposit To KCB","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Savings Termination To KCB"">
		<name>FSI KCB Savings Termination To KCB</name>
		<description>FSI KCB Savings Termination To KCB</description>
		<version>2</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Common Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
            </activity>

            <activity id=""Common Authorization"" name=""Common Authorization""
                logic=""CommonAuthorization"" logictype=""chain"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Pending 3rd Confirm"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>
        </state>

        <!-- å‘é€ TARGET_SAVING_TERMINATION åˆ°å­˜è´·ç³»ç»Ÿ,èŽ·å–PRINCIPAL_INTEREST ç„¶åŽåˆ·æ–°ä¸Šä¸‹æ–‡ä¸­amount-->
        <state name=""Pending 3rd Confirm"">
            <listener id=""Intervention Handler for Pending 3rd Confirm"" name=""Intervention Handler for Pending 3rd Confirm""
                logic=""InterventionHandleActivity"" logictype=""bean"">
                <transition name=""complete"" method=""out"" type=""activity""
                    next=""Complete Funds"">
                    <criteria operator=""eq"" value=""1"" />
                </transition>
                <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""2"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </listener>

            <activity id=""FSI Authorization"" name=""FSI Authorization""
                logic=""FSIAuthorization"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <activity id=""Send FSI KCB Savings Termination To KCB Request""
                name=""Send FSI KCB Savings Termination To KCB Request"" logic=""SendFsiKCBSavingsTerminationToKCBRequest"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Termination TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- If Send failure or timeout, we need to send fail notification and cancel transaction-->
            <activity id=""Check If Suspend Fsi KCB Savings Termination TX On Failure""
                name=""Check If Suspend Fsi KCB Savings Deposit TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
                <transition method=""out"" type=""state""
                    next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Receive FSI KCB Savings Termination To KCB Response"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>


            <!-- èŽ·å– KCBä¸­ä¼ è¿‡æ¥çš„ PRINCIPAL_INTEREST ç„¶åŽæ›´æ–°ä¸Šä¸‹æ–‡ amount å’ŒactualAmount-->
            <activity id=""Receive FSI KCB Savings Termination To KCB Response""
                name=""Receive FSI KCB Savings Termination To KCB Response"" logic=""ReceiveFsiKCBSavingsTerminationToKCBResponseActivity""
                logictype=""bridge"">
                <transition method=""out"" type=""state"" next=""Validated"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>

        </state>

        <state name=""Validated"">

            <!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
            <activity id=""Transaction Reserve"" name=""Transaction Reserve""
                logic=""TransactionReserve"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

        </state>

        <state name=""Authorized"">

            <listener id=""Intervention Handler"" name=""Intervention Handler""
                logic=""InterventionHandleActivity"" logictype=""bean"">
                <transition name=""complete"" method=""out"" type=""activity""
                    next=""Complete Funds"">
                    <criteria operator=""eq"" value=""1"" />
                </transition>
                <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""2"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </listener>

             <activity id=""Send FSI KCB Savings Withdraw From KCB Request""
                name=""Send FSI KCB Savings Withdraw From KCB Request"" logic=""SendFsiKCBSavingsWithdrawFromKCBRequest"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- If Send failure or timeout, we need to suspend the KCB TX -->
            <activity id=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure""
                name=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure""
                logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
                <transition method=""out"" type=""activity""
                    next=""Send Failure Authorized Notification"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Receive FSI KCB Savings Withdraw From KCB Response"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

            <!-- Just send a notice in need if failure response received and suspend
                the KCB TX -->
            <activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification""
                logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <activity id=""Receive FSI KCB Savings Withdraw From KCB Response""
                name=""Receive FSI KCB Savings Withdraw From KCB Response"" logic=""ReceiveFsiKCBSavingsWithdrawFromKCBResponseActivity""
                logictype=""bridge"">
                <transition method=""out"" type=""activity"" next=""Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>

            <activity id=""Check Transaction Expired Before Complete Funds""
                name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
                logictype=""bean"">
                <transition method=""out"" type=""state"" next=""Expired"">
                    <criteria operator=""eq"" value=""expire"" />
                </transition>
            </activity>


            <activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
                <transition method=""out"" type=""state"" next=""Completed"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>

        </state>

        <state name=""Completed"">
            <activity id=""Business Completion"" name=""Business Ending""
                logic=""FSIKCBBusinessEnding"">
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>
        </state>

        <state name=""Declined"">
            <activity id=""Business Declined"" name=""BusinessFailedProcessing""
                logic=""FSIKCBBusinessFailedProcessing"" />
        </state>

        <state name=""Cancelled"">
            <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
                logic=""FSIKCBBusinessFailedProcessing"" />
        </state>

        <state name=""Expired"">

            <!-- It will move on to the next activity in case of exceptions -->
            <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
                logic=""BusinessExpiredProcessing"" logictype=""chain"" />

        </state>

    </template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Savings Termination To KCB","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Savings Withdraw From KCB"">
		<name>FSI KCB Savings Withdraw From KCB</name>
		<description>FSI KCB Savings Withdraw From KCB</description>
		<version>2</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization"" logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""FSI Authorization"" name=""FSI Authorization"" logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

			<!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
			<activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

		</state>

		<state name=""Pending Authorized"">
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
			</activity>
		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity"" next=""Complete Funds"">
					<criteria operator=""eq"" value=""1""/>
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</listener>

			<activity id=""Send FSI KCB Savings Withdraw From KCB Request"" name=""Send FSI KCB Savings Withdraw From KCB Request"" logic=""SendFsiKCBSavingsWithdrawFromKCBRequest"">
				<transition method=""suspended"" type=""activity"" next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
					<criteria operator=""eq"" value=""suspend""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

			<!-- If Send failure or timeout, we need to suspend the KCB TX -->
			<activity id=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"" name=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""activity"" next=""Send Failure Authorized Notification"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""activity"" next=""Receive FSI KCB Savings Withdraw From KCB Response"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
			</activity>

			<!-- Just send a notice in need if failure response received and suspend
				the KCB TX -->
			<activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification"" logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
				<transition method=""suspended"" type=""activity"" next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""suspended"" type=""activity"" next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
			</activity>

			<activity id=""Receive FSI KCB Savings Withdraw From KCB Response"" name=""Receive FSI KCB Savings Withdraw From KCB Response"" logic=""ReceiveFsiKCBSavingsWithdrawFromKCBResponseActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Complete Funds"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
			</activity>


			<activity id=""Check Transaction Expired Before Complete Funds"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire""/>
				</transition>
			</activity>


			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending"" logic=""FSIKCBBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined""/>
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""FSIKCBBusinessFailedProcessing""/>
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""FSIKCBBusinessFailedProcessing""/>
		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing"" logictype=""chain""/>

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Savings Withdraw From KCB","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSI KCB Target Saving Activate From KCB"">
        <name>FSI KCB Target Saving Activate From KCB</name>
        <description>FSI KCB Target Saving Activate From KCB</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>

        <state name=""Initiated"">
            <activity id=""Business Initialization"" name=""Business Initialization""
                logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Validated"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>
        </state>

        <state name=""Validated"">

            <activity id=""FSI KCB Target Saving Activate KCB Common Authorization""
                name=""FSI KCB Target Saving Activate KCB Common Authorization""
                logic=""FSIAuthorization"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
            <activity id=""Transaction Reserve"" name=""Transaction Reserve""
                logic=""TransactionReserve"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>

            <activity id=""Check Authorization"" name=""Check Authorization""
                logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
                <transition method=""out"" type=""state"" next=""Pending Authorized"">
                    <criteria operator=""eq"" value=""true"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""false"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

        </state>

        <state name=""Pending Authorized"">
            <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
                <transition method=""suspended"" type=""activity"" next=""Raise Task"">
                    <criteria operator=""eq"" value=""raise success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>
        </state>

        <state name=""Authorized"">

            <listener id=""Intervention Handler"" name=""Intervention Handler""
                logic=""InterventionHandleActivity"" logictype=""bean"">
                <transition name=""complete"" method=""out"" type=""activity""
                    next=""Complete Funds"">
                    <criteria operator=""eq"" value=""1"" />
                </transition>
                <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""2"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </listener>

            <!-- Send Target Saving Activate KCB Request To FI KCB (MK_TARGET_SAVING
                Request) -->
            <activity id=""Send KCB Target Saving Activate KCB Request""
                name=""Send KCB Target Saving Activate KCB Request"" logic=""SendKCBTargetSavingActivateKCBRequest"">
                <transition method=""suspended"" type=""activity""
                    next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- If Send failure or timeout, we need to suspend the KCB TX -->
            <activity id=""Check FSI KCB TargetSaving Repayment TX On Failure""
                name=""Check FSI KCB TargetSaving Repayment TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
                <transition method=""out"" type=""activity""
                    next=""Send Failure Authorized Notification"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Receive KCB Target Saving Activate KCB Response"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

            <!-- Just send a notice in need if failure response received and suspend
                the KCB TX -->
            <activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification""
                logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
                <transition method=""suspended"" type=""activity""
                    next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- Receive Target Saving Activate KCB Response From FI KCB (MK_TARGET_SAVING
                Response) -->
            <activity id=""Receive KCB Target Saving Activate KCB Response""
                name=""Receive KCB Target Saving Activate KCB Response"" logictype=""bridge""
                logic=""ReceiveKCBTargetSavingActivateResponseActivity"">
                <transition method=""out"" type=""activity"" next=""Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
            </activity>

            <activity id=""Check Transaction Expired Before Complete Funds""
                name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
                logictype=""bean"">
                <transition method=""out"" type=""state"" next=""Expired"">
                    <criteria operator=""eq"" value=""expire"" />
                </transition>
            </activity>

            <activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
                <transition method=""out"" type=""state"" next=""Completed"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>
        </state>

        <state name=""Completed"">
            <activity id=""Business Completion"" name=""Business Ending""
                logic=""FSIKCBBusinessEnding"" />
        </state>

        <state name=""Declined"">
            <activity id=""Business Declined"" name=""BusinessFailedProcessing""
                logic=""FSIKCBBusinessFailedProcessing"" />
        </state>

        <state name=""Cancelled"">
            <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
                logic=""FSIKCBBusinessFailedProcessing"" />
        </state>

        <state name=""Expired"">
            <!-- It will move on to the next activity in case of exceptions -->
            <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
                logic=""BusinessExpiredProcessing"" logictype=""chain""/>
        </state>

    </template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Target Saving Activate From KCB","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI KCB Target Saving Deposit From KCB"">
		<name>FSI KCB Target Saving Deposit From KCB</name>
		<description>FSI KCB Target Saving Deposit From KCB</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""FSI KCB Target Saving Activate KCB Common Authorization""
				name=""FSI KCB Target Saving Activate KCB Common Authorization""
				logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

		</state>

		<state name=""Pending Authorized"">
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>
		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<!-- Send Target Saving Deposit KCB Request To FI KCB (MK_TARGET_SAVING_DEPOSIT
				Request) -->
			<activity id=""Send KCB Target Saving Deposit KCB Request""
				name=""Send KCB Target Saving Deposit KCB Request"" logic=""SendKCBTargetSavingDepositKCBRequest"">
				<transition method=""suspended"" type=""activity""
					next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- If Send failure or timeout, we need to suspend the KCB TX -->
			<activity id=""Check FSI KCB TargetSaving Repayment TX On Failure""
				name=""Check FSI KCB TargetSaving Repayment TX On Failure"" logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""activity""
					next=""Send Failure Authorized Notification"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive KCB Target Saving Deposit KCB Response"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<!-- Just send a notice in need if failure response received and suspend
				the KCB TX -->
			<activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification""
				logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
				<transition method=""suspended"" type=""activity""
					next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""suspended"" type=""activity""
					next=""Check FSI KCB TargetSaving Repayment TX On Failure"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- Receive Target Saving Deposit KCB Response From FI KCB (MK_TARGET_SAVING_DEPOSIT
				Response) -->
			<activity id=""Receive KCB Target Saving Deposit KCB Response""
				name=""Receive KCB Target Saving Deposit KCB Response"" logictype=""bridge""
				logic=""ReceiveKCBTargetSavingDepositResponseActivity"">
				<transition method=""out"" type=""activity"" next=""Complete Funds"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

			<activity id=""Check Transaction Expired Before Complete Funds""
				name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
				logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""FSIKCBLoanRepayment_FSIBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">
			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" logictype=""chain""/>
		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Business Completion.FSIPaymentSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSI KCB Target Saving Deposit From KCB","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI Loan Request"">
		<name>FSI Loan Request</name>
		<description>FSI Loan Request</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Common Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

			<activity id=""Common Authorization"" name=""Common Authorization""
				logic=""CommonAuthorization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Pending 3rd Confirm"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<!--
			å‘é€ loan request åˆ°å­˜è´·ç³»ç»Ÿ
		-->
		<state name=""Pending 3rd Confirm"">
			<listener id=""Intervention Handler for Pending 3rd Confirm""
				name=""Intervention Handler for Pending 3rd Confirm""
				logic=""InterventionHandleActivity""
				logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""FSI Authorization""
				name=""FSI Authorization""
				logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Send FSI KCB Savings Termination To KCB Request""
				name=""Send FSI KCB Savings Termination To KCB Request""
				logic=""SendFsiLoanRequestToKCBRequest"">
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB Savings Termination TX On Failure"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- If Send failure or timeout, we need to send fail notification and cancel transaction-->
			<activity id=""Check If Suspend Fsi KCB Savings Termination TX On Failure""
				name=""Check If Suspend Fsi KCB Savings Deposit TX On Failure""
				logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""state""
					next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive FSI KCB Savings Termination To KCB Response"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>


			<!-- èŽ·å– KCBä¸­ä¼ è¿‡æ¥çš„ LOAN_BALANCE ç„¶åŽæ›´æ–°ä¸Šä¸‹æ–‡ amount -->
			<activity id=""Receive FSI KCB Savings Termination To KCB Response""
				name=""Receive FSI KCB Savings Termination To KCB Response""
				logic=""ReceiveLoanRequestFromKCBResponseActivity""
				logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

		</state>

		<state name=""Validated"">

			<!-- è°ƒç”¨äº¤æ˜“å±‚çš„æœåŠ¡æŽ¥å£ï¼Œè¿›è¡Œèµ„é‡‘é¢„ç•™äº¤æ˜“ -->
			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			 <activity id=""Send FSI KCB Savings Withdraw From KCB Request""
                name=""Send FSI KCB Savings Withdraw From KCB Request"" logic=""SendFsiKCBSavingsWithdrawFromKCBRequest"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <!-- If Send failure or timeout, we need to suspend the KCB TX -->
            <activity id=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure""
                name=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure""
                logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
                <transition method=""out"" type=""activity""
                    next=""Send Failure Authorized Notification"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Receive FSI KCB Savings Withdraw From KCB Response"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

            <!-- Just send a notice in need if failure response received and suspend
                the KCB TX -->
            <activity id=""Send Failure Authorized Notification"" name=""Send Failure Authorized Notification""
                logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check If Suspend Fsi KCB Savings Withdraw TX On Failure"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <activity id=""Receive FSI KCB Savings Withdraw From KCB Response""
                name=""Receive FSI KCB Savings Withdraw From KCB Response"" logic=""ReceiveFsiKCBSavingsWithdrawFromKCBResponseActivity""
                logictype=""bridge"">
                <transition method=""out"" type=""activity"" next=""Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>

			<activity id=""Check Transaction Expired Before Complete Funds""
				name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
				logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>


			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""FSIKCBBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" logictype=""chain"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send FSI Request.TransactionAuthorizationNotifyBuilder|Send Failure Authorized Notification|","FSI Loan Request","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSI Loan Request Two"">
		<name>FSI Loan Request Two</name>
		<description>FSI Loan Request Two</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BS.FSI.FSISavingInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Common Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

			<activity id=""Common Authorization"" name=""Common Authorization""
				logic=""CommonAuthorization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""FSI Authorization""
				name=""FSI Authorization""
				logic=""FSIAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>


			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Pending 3rd Confirm"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Pending 3rd Confirm"">
			<listener id=""Intervention Handler for Pending 3rd Confirm""
				name=""Intervention Handler for Pending 3rd Confirm""
				logic=""InterventionHandleActivity""
				logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>


			<activity id=""Send FSI KCB Savings Termination To KCB Request""
				name=""Send FSI KCB Savings Termination To KCB Request""
				logic=""SendFsiLoanRequestToKCBRequest"">
				<transition method=""suspended"" type=""state""
					next=""Authorized"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized"">
			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Complete Funds"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<!-- If Send failure or timeout, we need to send fail notification and cancel transaction-->
			<activity id=""Check If Suspend Fsi KCB Savings Termination TX On Failure""
				name=""Check If Suspend Fsi KCB Savings Deposit TX On Failure""
				logic=""CheckerWhetherResponseFromKCBSuspended"">
				<transition method=""out"" type=""activity""
					next=""Notify and Response If Suspended"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive Loan Request From KCB Response Activity"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive FSI KCB Savings Withdraw From KCB Response"">
					<criteria operator=""eq"" value=""continue"" />
				</transition>
			</activity>

			<activity id=""Receive Loan Request From KCB Response Activity""
				name=""Receive Loan Request From KCB Response Activity""
				logic=""ReceiveLoanRequestFromKCBResponseNewActivity""
				logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Notify and Response If Success"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

			<activity id=""Notify and Response If Suspended""
				name=""Notify and Response If Suspended""
				logic=""TransactionSuspend"">
				<transition method=""out"" type=""activity""
                    next=""Wait For KCB Confirm Request"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
			</activity>

			<activity id=""Notify and Response If Success""
				name=""Notify and Response If Success""
				logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
				<transition method=""out"" type=""activity""
                    next=""Wait For KCB Confirm Request"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
			</activity>

			 <activity id=""Wait For KCB Confirm Request""
                name=""Wait For KCB Confirm Request""
                logic=""WaitForKCBConfirmRequestActivity""  logictype=""bridge"">
                <transition method=""suspended"" type=""activity""
                    next=""Receive FSI KCB Savings Withdraw From KCB Response"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <activity id=""Receive FSI KCB Savings Withdraw From KCB Response""
                name=""Receive FSI KCB Savings Withdraw From KCB Response"" logic=""ReceiveFsiKCBLoanConfirmRequestActivity""
                logictype=""bridge"">
                <transition method=""out"" type=""activity"" next=""Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""cancelled"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>

			<activity id=""Check Transaction Expired Before Complete Funds""
				name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
				logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

			<activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""FSIKCBBusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""FSIKCBBusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" logictype=""chain"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send FSI Request.TransactionAuthorizationNotifyBuilder|Send Failure Authorized Notification|Notify and Response Depend the Result|Notify and Response If Suspended.TransactionSuspendNotifyBuilder|Notify and Response If Success|","FSI Loan Request Two","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSIActionProcess"">
      <name>FSI Action Process.</name>
      <description>FSI Action Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""FSI Action Authorization"" name=""FSI Action Authorization"" logic=""FSIActionAuthorization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
          <listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
	 </listener>

         <activity id=""FSI Action Process"" name=""FSI Action Process"" logic=""FSIActionProcess"" logictype=""chain"">
            <transition method=""suspended"" type=""activity"" next=""FSI Action Process"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transfer Funds"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
        <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Send Cancel Transaction State Notification Request"" name=""Send Cancel Transaction State Notification Request"" logic=""SendTransactionStateNotificationRequestWhenFailed"" logictype=""bean""/>
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIActionProcess","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSIInsurance"">
        <name>FSI Insurance Request.</name>
        <description>FSI Insurance Request With FI Confirm Message.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSITransferWithAuthorization</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send FSI Request.TransactionAuthorizationNotifyBuilder|","FSIInsurance","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSIKCBActionProcess"">
		<name>FSI KCB Action Process.</name>
		<description>FSI KCB Action Process.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BusinessInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
			<activity id=""FSI Action Authorization"" name=""FSI Action Authorization""
				logic=""FSIActionAuthorization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Authorized"">
			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""state""
					next=""Completed"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""Send KCB Request"" name=""Send KCB Request""
				logic=""SendFSIRequest"">
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB TX On Failure"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<!-- If Send failure or timeout, we need to suspend the KCB TX -->
			<activity id=""Check If Suspend Fsi KCB TX On Failure"" name=""Check If Suspend Fsi KCB TX On Failure""
				logic=""CheckIfSuspendFsiKCBTxOnFailureResponse"">
				<transition method=""out"" type=""activity""
					next=""Send Authorized Notification"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""activity""
					next=""Receive KCB Response"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<!-- Just send a notice in need if failure response received and suspend
				the KCB TX -->
			<activity id=""Send Authorized Notification"" name=""Send Authorized Notification""
				logic=""TransactionFailureNotifyBuilder"" logictype=""bridge"">
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB TX On Failure"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""suspended"" type=""activity""
					next=""Check If Suspend Fsi KCB TX On Failure"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
			<activity id=""Check Authorized Transaction Expired"" name=""Check Authorized Transaction Expired""
				logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

			<activity id=""Receive KCB Response""
				name=""Receive KCB Response""
				logic=""ReceiveFSIResponse"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

			<activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
            <!-- Extra processing -->
			<activity id=""Extra Processing"" name=""Extra Processing""
				logic=""ExtraFsiProcessing"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Send Completed Notification"" name=""Send Notification""
				logic=""TransactionSuccessNotifyBuilder""  logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" />
		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Send Completed Notification.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIKCBActionProcess","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSIKCBQueryEligibleCreditLimit"">
		<name>FSI KCB Query Eligible Credit Limit.</name>
		<description>FSI KCB Query Eligible Credit Limit.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>FSIKCBActionProcess</ref-template>

	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Send Completed Notification.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIKCBQueryEligibleCreditLimit","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSIKCBQueryMiniStatement"">
		<name>Query FSI KCB Mini Statement.</name>
		<description>Query FSI KCB Mini Statement.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>FSIKCBActionProcess</ref-template>
	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Send Completed Notification.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIKCBQueryMiniStatement","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSIKCBQuerySavingBalance"">
		<name>FSI KCB Query Saving Balance.</name>
		<description>FSI KCB Query Saving Balance.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>FSIKCBActionProcess</ref-template>

	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Send Failure Authorized Notification.TransactionFailureNotifyBuilder|Send Completed Notification.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIKCBQuerySavingBalance","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSILoanRepayment"">
        <name>FSI Loan Repayment.</name>
        <description>FSI Loan Repayment With FI Confirm Message.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSITransferWithAuthorization</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.FSIPaymentSuccessNotifyBuilder|Business Completion.FSIOverPaymentSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Send FSI Request.TransactionFailureNotifyBuilderfor3rdParty|","FSILoanRepayment","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSILoanRequest"">
        <name>FSI Loan Request.</name>
        <description>FSI Loan Request With FI Confirm Message.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSITransferWithAuthorization</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send FSI Request.TransactionAuthorizationNotifyBuilder|","FSILoanRequest","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSIMShwariQueryLoanMiniStatement"">
        <name>FSI M-Shwari Query Loan Mini Statement.</name>
        <description>FSI M-Shwari Query Loan Mini Statement.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSIActionProcess</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIMShwariQueryLoanMiniStatement","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSIPayout"">
        <name>FSI Payout.</name>
        <description>FSI Payout.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSITransfer</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","FSIPayout","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSIQueryEligibleCreditLimit"">
		<name>FSI Query Eligible Credit Limit.</name>
		<description>FSI Query Eligible Credit Limit.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>FSIActionProcess</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIQueryEligibleCreditLimit","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""FSIQueryLoanAccount"">
		<name>FSI Query Loan Account</name>
		<description>FSI Query Loan Account.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>FSIActionProcess</ref-template>
	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIQueryLoanAccount","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSIQueryMiniStatement"">
        <name>Query FSI Mini Statement.</name>
        <description>Query FSI Mini Statement.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSIActionProcess</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIQueryMiniStatement","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""FSIQuerySavingBalance"">
        <name>FSI Query Saving Balance.</name>
        <description>FSI Query Saving Balance.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>FSIActionProcess</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FSIQuerySavingBalance","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSISavingsDeposit"">
      <name>FSI Savings Deposit.</name>
      <description>FSI Savings Deposit via API.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>FSITransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","FSISavingsDeposit","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSISavingsDepositWithConfirmMessage"">
      <name>FSI Savings Deposit With Confirm Message.</name>
      <description>FSI Savings Deposit With FI Confirm Message.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>FSITransferWithAuthorization</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Send FSI Request.TransactionFailureNotifyBuilderfor3rdParty|","FSISavingsDepositWithConfirmMessage","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSISavingsWithdraw"">
      <name>FSI Savings Withdraw.</name>
      <description>FSI Savings Withdraw via API.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>FSITransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","FSISavingsWithdraw","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSISavingsWithdrawWithConfirmMessage"">
      <name>FSI Savings Withdraw With Confirm Message.</name>
      <description>FSI Savings Withdraw With FI Confirm Message.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>FSITransferWithAuthorization</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Send FSI Request.TransactionFailureNotifyBuilderfor3rdParty|","FSISavingsWithdrawWithConfirmMessage","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSITransfer"">
      <name>FSI Business Process.</name>
      <description>FSI Business Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""FSI Authorization"" name=""FSI Authorization"" logic=""FSIAuthorization"">
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Send Cancel Transaction State Notification Request"" name=""Send Cancel Transaction State Notification Request"" logic=""SendTransactionStateNotificationRequestWhenFailed"" logictype=""bean""/>
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionFailureNotifyBuilder|","FSITransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FSITransferWithAuthorization"">
      <name>FSI With Authorization Business Process.</name>
      <description>FSI With Authorization Business Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""FSI Loan Common Authorization"" name=""FSI Loan Common Authorization"" logic=""FSIAuthorization""/>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>
         <!--Request:RequestLoanRequest-->
         <activity id=""Send FSI Request"" name=""Send FSI Request"" logic=""SendFSIRequest"">
            <transition method=""suspended"" type=""activity"" next=""Send FSI Request"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""cancelled""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""FSIBusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
	     <transition method=""out"" type=""state"" next=""Cancelled"">
        		<criteria operator=""eq"" value=""exception"" />
        	</transition>
         </activity>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""FSIBusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Send Cancel Transaction State Notification Request"" name=""Send Cancel Transaction State Notification Request"" logic=""SendTransactionStateNotificationRequestWhenFailed"" logictype=""bean""/>
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""FSIBusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|","FSITransferWithAuthorization","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Finance Online Control Account Transfer"">
      <name>Finance Online Control Account Transfer.</name>
      <description>Finance Online Control Account Transfer with Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Init ReconcileLog Record"" name=""Init ReconcileLog Record"" logic=""ProcessControlTransferDataInit"">
            <transition method=""out"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Reconcile Authorization With Check ReEntry"" name=""Reconcile Authorization With Check ReEntry"" logic=""ProcessReconcileAuthorizationWithCheckReEntry"">
            <transition method=""suspended"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Cancle Pending Authorized Reconcile Transaction"" name=""Cancle Pending Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <!--transition name=""complete"" method=""out"" type=""activity"" next=""Process
                     					Authorized Ack Activity""> <criteria operator=""eq"" value=""1"" /> </transition>-->
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Authorized ReconcileLog Record"" name=""Authorized ReconcileLog Record"" logic=""ProcessControlTransferDataAuthorized"">
            <transition method=""out"" type=""activity"" next=""Send Online Control Account Transfer Request Activty"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <!--send request to AG and-->
         <activity id=""Send Online Control Account Transfer Request Activty"" name=""Send Online Control Account Transfer Request Activty"" logic=""BS.Reconcile.SendOnlineControlAccountTransRequestActivty"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <!--wait for the response of the 3rd part(bank)-->
         <activity id=""Raise Authorized Activity"" name=""Raise Authorized Activity"" logic=""BS.Reconcile.WaitingApproveActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Authorized Online Control Account Transfer Call Back"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Authorized Online Control Account Transfer Call Back"" name=""Authorized Online Control Account Transfer Call Back"" logic=""BS.Reconcile.OnlineTransfer2BankActActivity"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Online Control Transfer Reversal Request"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>
         <activity id=""Online Control Transfer Reversal Request"" name=""Online Control Transfer Reversal Request"" logic=""BS.Reconcile.ControlAccountTransfer2BankReversalRequestActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Check Online Control Transfer Reversal Call Back"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Check Online Control Transfer Reversal Call Back"" name=""Check Online Control Transfer Reversal Call Back"" logic=""BS.Reconcile.OnlineTransfer2BankReversalAckActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""suspended"" type=""activity"" next=""Check Online Control Transfer Reversal Call Back"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
         </activity>
         <activity id=""Process Authorized Ack Activity"" name=""Process Authorized Ack Activity"" logic=""BS.Reconcile.ApproveActivityActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Cancle Authorized Reconcile Transaction"" name=""Cancle Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Send Authorized Notification"" name=""Send Authorized Notification"" logic=""ControlTransferAuthorizedNotify"">
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Finance Online Control Account Transfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Finance Online Deposit Transfer"">
      <name>Finance Online Deposit Transfer.</name>
      <description>Finance Online Deposit Transfer With Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Finance Online Deposit Transfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Finance Online Withdraw Derived Transfer"">
      <name>Finance Online Withdraw Derived Transfer.</name>
      <description>Finance Online Withdraw Derived Transfer with Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            	<transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Reconcile Authorization With Check ReEntry"" name=""Reconcile Authorization With Check ReEntry"" logic=""ProcessReconcileAuthorizationWithCheckReEntry"">
            <transition method=""suspended"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Cancle Pending Authorized Reconcile Transaction"" name=""Cancle Pending Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""activity"" next=""Cancle Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Authorized Online Withdraw"" name=""Authorized Online Withdraw"" logic=""BS.Reconcile.OnlineWithdrawAuthorizedActivity"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <!--second reentry-->
         <activity id=""Raise Authorized Activity"" name=""Raise Authorized Activity"" logic=""BS.Reconcile.WaitingApproveActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Authorized Online Withdraw Call Back"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Authorized Online Withdraw Call Back"" name=""Authorized Online Withdraw Call Back"" logic=""BS.Reconcile.OnlineTransfer2BankActActivity"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Online Withdraw Reversal Request"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>
         <activity id=""Online Withdraw Reversal Request"" name=""Online Withdraw Reversal Request"" logic=""BS.Reconcile.OnlineTransfer2BankReversalRequestActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Check Online Withdraw Reversal Call Back"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Check Online Withdraw Reversal Call Back"" name=""Check Online Withdraw Reversal Call Back"" logic=""BS.Reconcile.OnlineTransfer2BankReversalAckActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""state"" next=""Check Online Withdraw Reversal Call Back"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""suspended"" type=""state"" next=""Check Online Withdraw Reversal Call Back"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""suspended"" type=""state"" next=""Check Online Withdraw Reversal Call Back"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""suspended"" type=""activity"" next=""Check Online Withdraw Reversal Call Back"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
         </activity>
         <activity id=""Process Authorized Ack Activity"" name=""Process Authorized Ack Activity"" logic=""BS.Reconcile.ApproveActivityActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Cancle Authorized Reconcile Transaction"" name=""Cancle Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""WithdrawDerivedBusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""WithdrawDerivedCancelledProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""WithdrawDerivedExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Finance Online Withdraw Derived Transfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Finance OnlineCashin Transfer With Authorized"">
      <name>Finance OnlineCashin Transfer With Authorized.</name>
      <description>Finance OnlineCashin Transfer With Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">

         <activity id=""Setter Online Cashin Control Account"" name=""Setter Online Cashin Control Account"" logic=""BS.Reconcile.SetterOnlineCashInControlAccountActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>

         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            	<transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">

         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>

         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Check Transaction Expired Before Complete Funds"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Check Transaction Expired"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>

         <activity id=""OnlineCashInRequest"" name=""OnlineCashInRequest"" logic=""BS.Reconcile.OnlineCashInRequestActivity"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Authorized Activity"" name=""Raise Authorized Activity"" logic=""BS.Reconcile.WaitingApproveActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Authorized Online Cash In Call Back"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Authorized Online Cash In Call Back"" name=""Authorized Online Cash IN Call Back"" logic=""BS.Reconcile.OnlineCashInFromBankActActivity"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Online Cash In Reversal Request"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>
         <activity id=""Online Cash In Reversal Request"" name=""Online Cash In Reversal Request"" logic=""BS.Reconcile.OnlineCashInFromBankReversalRequestActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Check Online Cash In Reversal Call Back"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Check Online Cash In Reversal Call Back"" name=""Check Online Cash In Reversal Call Back"" logic=""BS.Reconcile.OnlineCashInFromBankReversalAckActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Check Online Cash In Reversal Call Back"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""suspended"" type=""activity"" next=""Check Online Cash In Reversal Call Back"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""suspended"" type=""activity"" next=""Check Online Cash In Reversal Call Back"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""suspended"" type=""activity"" next=""Check Online Cash In Reversal Call Back"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
         </activity>
         <activity id=""Check Transaction Expired Before Complete Funds"" name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>

         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">

         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""OnlineCashinCancelledProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""OnlineCashinExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.BS.Reconcile.CNSTransactionFailureNotifyBuilderWhenCancelled|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Finance OnlineCashin Transfer With Authorized","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FinanceCancellation"">
      <name>Finance Cancellation Business Process</name>
      <description>Finance Cancellation Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithPending</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FinanceCancellation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FinanceControlAccountTransfer"">
      <name>Finance Control Account Transfer.</name>
      <description>Finance Control Account Transfer with Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Init ReconcileLog Record"" name=""Init ReconcileLog Record"" logic=""ProcessControlTransferDataInit"">
            <transition method=""out"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Reconcile Authorization With Check ReEntry"" name=""Reconcile Authorization With Check ReEntry"" logic=""ProcessReconcileAuthorizationWithCheckReEntry"">
            <transition method=""suspended"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Cancle Pending Authorized Reconcile Transaction"" name=""Cancle Pending Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <!--transition name=""complete"" method=""out"" type=""activity"" next=""Process
                     					Authorized Ack Activity""> <criteria operator=""eq"" value=""1"" /> </transition>-->
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <!--update reconcileLog status-->
         <activity id=""Authorized ReconcileLog Record"" name=""Authorized ReconcileLog Record"" logic=""ProcessControlTransferDataAuthorized"">
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <!--second reentry-->
         <activity id=""Raise Authorized Activity"" name=""Raise Authorized Activity"" logic=""BS.Reconcile.WaitingApproveActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Process Authorized Ack Activity"" name=""Process Authorized Ack Activity"" logic=""BS.Reconcile.ApproveActivityActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Cancle Authorized Reconcile Transaction"" name=""Cancle Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""ReconcileExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FinanceControlAccountTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FinanceDeposit"">
      <name>Finance Deposit Transfer.</name>
      <description>Finance Deposit Transfer.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithDirectPending</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FinanceDeposit","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FinanceDirectWithdraw"">
      <name>Finance Direct Withdraw.</name>
      <description>Finance Direct Withdraw.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FinanceDirectWithdraw","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FinanceWithdrawDerivedTransfer"">
      <name>Finance Withdraw Derived Transfer.</name>
      <description>Finance Transfer Withdraw Derived with Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""WithdrawDerivedBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Init ReconcileLog Record"" name=""Init ReconcileLog Record"" logic=""ProcessReconcileDataInit"">
            <transition method=""out"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Reconcile Authorization With Check ReEntry"" name=""Reconcile Authorization With Check ReEntry"" logic=""ProcessReconcileAuthorizationWithCheckReEntry"">
            <transition method=""suspended"" type=""activity"" next=""Reconcile Authorization With Check ReEntry"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Pending Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Cancle Pending Authorized Reconcile Transaction"" name=""Cancle Pending Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <!--transition name=""complete"" method=""out"" type=""activity"" next=""Process
                     					Authorized Ack Activity""> <criteria operator=""eq"" value=""1"" /> </transition>-->
            <transition name=""cancel"" method=""out"" type=""activity"" next=""Cancle Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <!--update reconcileLog status-->
         <activity id=""Authorized ReconcileLog Record"" name=""Authorized ReconcileLog Record"" logic=""ProcessReconcileDataAuthorized"">
            <transition method=""out"" type=""activity"" next=""Raise Authorized Activity"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <!--second reentry-->
         <activity id=""Raise Authorized Activity"" name=""Raise Authorized Activity"" logic=""BS.Reconcile.WaitingApproveActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Process Authorized Ack Activity"" name=""Process Authorized Ack Activity"" logic=""BS.Reconcile.ApproveActivityActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Cancle Authorized Reconcile Transaction"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Cancle Authorized Reconcile Transaction"" name=""Cancle Authorized Reconcile Transaction"" logic=""BS.Reconcile.ReconcileTransLogCanclledActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Process Authorized Ack Activity"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""WithdrawDerivedBusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""WithdrawDerivedCancelledProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""WithdrawDerivedExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FinanceWithdrawDerivedTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""FinanceWithdrawWithAuthorized"">
      <name>Finance Withdraw With Authorized.</name>
      <description>Finance Withdraw Transfer Authorized.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","FinanceWithdrawWithAuthorized","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Foreign Exchange Direct Transfer"">
      <name>Foreign Exchange Direct Transfer.</name>
      <description>Foreign Exchange Direct Transfer without Delivery.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""FXPaymentBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Process FX Transaction Processed"" name=""Process FX Transaction Processed"" logic=""ProcessFxTransactionActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""FXPaymentBusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""FXPaymentBusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""FXPaymentBusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""FXPaymentBusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Foreign Exchange Direct Transfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Foreign Exchange Identity to Sp"">
      <name>Foreign Exchange Identity to Sp.</name>
      <description>Foreign Exchange Identity to Sp without Delivery.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Foreign Exchange Identity to Sp","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Foreign Exchange Identity to Sp Without Authorization"">
      <name>Foreign Exchange Identity to Sp Without Authorization.</name>
      <description>Foreign Exchange Identity to Sp Without Authorization.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Foreign Exchange Identity to Sp Without Authorization","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Foreign Exchange Sp to Identity"">
      <name>Foreign Exchange Sp to Identity.</name>
      <description>Foreign Exchange Sp to Identity Without Authorization.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Foreign Exchange Sp to Identity","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Foreign Exchange Voucher Redeeming"">
      <name>Foreign Exchange Voucher Redeeming.</name>
      <description>Foreign Exchange Voucher Redeeming.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""FXReceivingBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Voucher Redeeming Reservation"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Voucher Redeeming Reservation"" name=""Voucher Redeeming Reservation"" logic=""VoucherRedeemingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Process FX Transaction Processed"" name=""Process FX Transaction Processed"" logic=""ProcessFxTransactionActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Voucher Redeeming"" name=""Voucher Redeeming"" logic=""VoucherRedeeming"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""FXReceivingBusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""FXReceivingBusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""FXReceivingBusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""FXReceivingBusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Initialization.SetRelatedReasonType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Foreign Exchange Voucher Redeeming","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""IMT HomeSend Request Quote By Voucher"">
      <name>IMT HomeSend Request Quote By Voucher.</name>
      <description>IMT HomeSend Request Quote By Voucher.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""IMTHomeSendQuoteBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">

         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler When Authorized"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>

         <activity id=""IMT AOC Process"" name=""IMT AOC Process"" logic=""IMTAOCProcess"">
            <transition method=""suspended"" type=""activity"" next=""IMT AOC Process"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>

         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Send Authorized Notification"" name=""Send Authorized Notification"" logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">

         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""OTCVoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""OTCVoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""OTCVoucherRedeemingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.InitiateRedeemVoucherType|Business Initialization.ValidateSanctionScreening|Business Initialization.CommonAuthorization|Business Initialization.CheckTransAdditionalData|IMT AOC Process.SendAdviceOfChargeRequest|IMT AOC Process.ReentryAdviceOfChargeReply|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","IMT HomeSend Request Quote By Voucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""IMT HomeSend Transfer Abroad By Voucher"">
      <name>IMT HomeSend Transfer Abroad By Voucher.</name>
      <description>IMT HomeSend Transfer Abroad By Voucher.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""IMTHomeSendAbroadBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Send Initiated Notification"" name=""Send Initiated Notification"" logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""IMT AOC Process"" name=""IMT AOC Process"" logic=""IMTAOCProcess"">
            <transition method=""suspended"" type=""activity"" next=""IMT AOC Process"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>

            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>

         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""InterventionHandlerWhenAuthorized"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>

		 <activity id=""Query AML Watchlist"" name=""Query AML Watchlist"" logic=""IMTAMLProcess"">
 				<transition method=""suspended"" type=""activity"" next=""Query AML Watchlist"">
 					<criteria operator=""eq"" value=""1""/>
 				</transition>
				 <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         	</activity>

         <activity id=""IMT Remittance Process"" name=""IMT Remittance Process"" logic=""IMTRemittanceProcess"">
            <transition method=""suspended"" type=""activity"" next=""IMT Remittance Process"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Auto Reconciliation For Status"">
               <criteria operator=""eq"" value=""autoReconciliation""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>

         <activity id=""Auto Reconciliation For Status"" name=""Auto Reconciliation For Status"" logic=""AutoReconciliationForStatus"">
            <transition method=""suspended"" type=""activity"" next=""Reentry Remittance Status"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>

         <activity id=""Reentry Remittance Status"" name=""Reentry Remittance Status"" logic=""ReentryRemittanceStatus"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""reject""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""complete""/>
            </transition>
            <transition method=""suspended"" type=""activity"" next=""Reentry Remittance Status"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>

         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">

         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""OTCVoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""OTCVoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""OTCVoucherRedeemingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","IMT Remittance Process.SendRemittanceRequest|Query AML Watchlist.BS.IMT.SendWatchListActivity|Business Initialization.InitiateRedeemVoucherType|Business Initialization.ValidateSanctionScreening|Business Initialization.CommonAuthorizationForIMT|Business Initialization.CheckTransAdditionalData|IMT AOC Process.SendAdviceOfChargeRequest|IMT AOC Process.ReentryAdviceOfChargeReply|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","IMT HomeSend Transfer Abroad By Voucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""IMTHomeSendCredit"">
       <name>IMT HomeSend Credit.</name>
       <description>IMT HomeSend Credit via API.</description>
       <version>1</version>
       <entry-point>Initiated</entry-point>
       <state name=""Initiated"">
          <activity id=""Business Initialization"" name=""Business Initialization"" logic=""IMTHomeSendCreditBusinessInitialization"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""failure""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized Pending Customer Registration"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Authorized Pending Customer Registration"">
          <listener id=""InterventionHandlerWhenPendingReg"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
             <transition name=""complete"" method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""1""/>
             </transition>
             <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""2""/>
             </transition>
          </listener>
          <activity id=""Process Customer Pending Registration"" name=""Process Customer Pending Registration""
                logic=""ProcessCustomerPendingRegistration"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state""
                    next=""Authorized Pending Customer Complete KYC"">
                    <criteria operator=""eq"" value=""Register"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Expired"">
                <criteria operator=""eq"" value=""expire"" />
            </transition>
            </activity>


            <activity id=""Send Notification To Customer To Register""
                name=""Send Notification"" logic=""SendNotificationToCustToRegister"">
                <transition method=""suspended"" type=""activity""
                    next=""Process Customer Pending Registration"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>
       </state>
       <state name=""Authorized Pending Customer Complete KYC"">
          <listener id=""InterventionHandlerWhenPendingKYC"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
             <transition name=""complete"" method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""1""/>
             </transition>
             <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""2""/>
             </transition>
          </listener>
          <activity id=""Process Customer Update KYC"" name=""Process Customer Update KYC""
                logic=""ProcessCustomerUpdateKYC"">
                <transition method=""out"" type=""state"" next=""Validated"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Send Notification To Customer To Update KYC"">
                    <criteria operator=""eq"" value=""waiting update"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Expired"">
                <criteria operator=""eq"" value=""expire"" />
            </transition>
            </activity>

            <activity id=""Send Notification To Customer To Update KYC""
                name=""Send Notification"" logic=""SendNotificationToCustToUpdateKYC"" >
                <transition method=""suspended"" type=""activity""
                    next=""Process Customer Update KYC"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>
       </state>
       <state name=""Validated"">
          <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
          <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
             <transition method=""out"" type=""state"" next=""Pending Authorized"">
                <criteria operator=""eq"" value=""true""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""false""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </activity>
       </state>
       <!--add by check authorization begin-->
       <state name=""Pending Authorized"">
          <activity id=""Send Provisional Result for Pending Authorized"" name=""Send HomeSend Result"" logic=""SendProvisionalResultActivity"" logictype=""bean"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </activity>
          <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
             <transition method=""suspended"" type=""activity"" next=""Raise Task"">
                <criteria operator=""eq"" value=""raise success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""failure""/>
             </transition>
          </activity>
       </state>
       <!--add by check authorization end-->
       <state name=""Authorized"">
          <listener id=""InterventionHandlerWhenAuthorized"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
             <transition name=""complete"" method=""out"" type=""activity"" next=""Complete Funds"">
                <criteria operator=""eq"" value=""1""/>
             </transition>
             <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""2""/>
             </transition>
          </listener>
          <activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Completed"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Completed"">
          <activity id=""Business Completion"" name=""Business Ending"" logic=""IMTHomeSendCreditBusinessEnding"">
          	<transition method=""out"" type=""activity"" next=""Send MarketOrder"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
          </activity>
          <activity id=""Send MarketOrder"" name=""Send MarketOrder"" logic=""IMTSendMarketOrder"" logictype=""bean""></activity>
       </state>
       <state name=""Declined"">
          <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""IMTHomeSendCreditBusinessDeclinedProcessing""/>
       </state>
       <state name=""Cancelled"">
          <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""IMTHomeSendCreditBusinessCancelledProcessing""/>
       </state>
       <state name=""Expired"">
          <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""IMTHomeSendCreditBusinessExpiredProcessing""/>
       </state>
    </template>
 </templates>","N","","","Business Initialization.CheckReceiverCustomerType|Business Initialization.CheckTransAdditionalData|Business Initialization.CheckerTransParams|Process Customer Pending Registration.CheckIMTTransactionExpired|Process Customer Pending Registration.ProcessCustomerPendingRegistration|Send Notification To Customer To Register.TransactionSuccessNotifyBuilder|Process Customer Update KYC.CheckIMTTransactionExpired|Process Customer Update KYC.CheckCustomerNeedUpdateKYC|Process Customer Update KYC.ProcessCustomerUpdateKYC|Send Notification To Customer To Update KYC.TransactionSuccessNotifyBuilder|Business Completion.SendHomeSendResultWhenStateFinalActivity|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendStatusReportRequestActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Cancelled.SendHomeSendResultWhenStateFinalActivity|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Expired.SendStatusReportRequestActivity|Business Cancelled.SendStatusReportRequestActivity|Business Declined.SendStatusReportRequestActivity|Business Declined.SendHomeSendResultWhenStateFinalActivity|","IMTHomeSendCredit","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""IMTHomeSendRequestQuote"">
      <name>IMT HomeSend Request Quote.</name>
      <description>IMT HomeSend Request Quote.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""IMTHomeSendQuoteBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler When Authorized"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>
         <activity id=""IMT AOC Process"" name=""IMT AOC Process"" logic=""IMTAOCProcess"">
            <transition method=""suspended"" type=""activity"" next=""IMT AOC Process"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Send Authorized Notification"" name=""Send Authorized Notification"" logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding""/>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""IMTBusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.ValidateSanctionScreening|Business Initialization.CommonAuthorization|Business Initialization.CheckTransAdditionalData|IMT AOC Process.SendAdviceOfChargeRequest|IMT AOC Process.ReentryAdviceOfChargeReply|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","IMTHomeSendRequestQuote","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""IMTHomeSendTransferAbroad"">
		<name>IMT HomeSend Transfer Abroad.</name>
		<description>IMT HomeSend Transfer Abroad.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""IMTHomeSendAbroadBusinessInitialization"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

			<activity id=""Send Initiated Notification"" name=""Send Initiated Notification""
				logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
              	<transition method=""out"" type=""state"" next=""Validated"">
 					<criteria operator=""eq"" value=""success""/>
 				</transition>
 				<transition method=""out"" type=""state"" next=""Validated"">
 					<criteria operator=""eq"" value=""exception""/>
 				</transition>
         	</activity>

		</state>

		<state name=""Validated"">

			<activity id=""IMT AOC Process"" name=""IMT AOC Process"" logic=""IMTAOCProcess"">
				<transition method=""suspended"" type=""activity"" next=""IMT AOC Process"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
		</state>

		<!-- add by check authorization begin -->
		<state name=""Pending Authorized"">

			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

		</state>
		<!-- add by check authorization end -->

		<state name=""Authorized"">
			<listener id=""InterventionHandlerWhenAuthorized"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Transaction Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
			</listener>

			<activity id=""Query AML Watchlist"" name=""Query AML Watchlist"" logic=""IMTAMLProcess"">
 				<transition method=""out"" type=""activity"" next=""Notify If AML Return Pending PM Action"">
 					<criteria operator=""eq"" value=""1""/>
 				</transition>
				 <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
	            </transition>
	            <transition method=""out"" type=""state"" next=""Declined"">
	               <criteria operator=""eq"" value=""declined""/>
	            </transition>
	            <transition method=""out"" type=""state"" next=""Cancelled"">
	               <criteria operator=""eq"" value=""exception""/>
	            </transition>
	            <transition method=""out"" type=""activity"" next=""IMT Remittance Process"">
	               <criteria operator=""eq"" value=""success""/>
	            </transition>
         	</activity>

			<activity id=""Notify If AML Return Pending PM Action"" name=""Notify If AML Return Pending PM Action""
				logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
				<transition method=""suspended"" type=""activity""
					next=""Query AML Watchlist"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""IMT Remittance Process"" name=""IMT Remittance Process"" logic=""IMTRemittanceProcess"">
				<transition method=""suspended"" type=""activity"" next=""IMT Remittance Process"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Auto Reconciliation For Status"">
					<criteria operator=""eq"" value=""autoReconciliation"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

			<activity id=""Auto Reconciliation For Status"" name=""Auto Reconciliation For Status""
				logic=""AutoReconciliationForStatus"">
				<transition method=""suspended"" type=""activity"" next=""Reentry Remittance Status"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Reentry Remittance Status"" name=""Reentry Remittance Status""
				logic=""ReentryRemittanceStatus"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""reject"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""complete"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""Reentry Remittance Status"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Transaction Complete"" name=""Complete Funds""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">

			<activity id=""Clean Auto Reconciliation Task When Completed""
				name=""Clean Auto Reconciliation Task"" logic=""CleanAutoReconciliationTask""
				logictype=""bridge"">
			</activity>

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""IMTSendCompleteNotification"" >
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

		</state>

		<state name=""Declined"">
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""IMTBusinessDeclinedProcessing"" />
		</state>

		<state name=""Cancelled"">
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""IMTBusinessFailedProcessing"" />
		</state>

		<state name=""Expired"">
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""IMTBusinessExpiredProcessing"" />
		</state>

	</template>
</templates>","N","","","Query AML Watchlist.BS.IMT.SendWatchListActivity|Business Initialization.ValidateSanctionScreening|Business Initialization.CheckTransAdditionalData|Business Initialization.CommonAuthorizationForIMT|IMT AOC Process.SendAdviceOfChargeRequest|IMT AOC Process.ReentryAdviceOfChargeReply|Notify If AML Return Pending PM Action.TransactionSuccessNotifyBuilder|IMT Remittance Process.SendRemittanceRequest|IMT Remittance Process.ReentryRemittanceReply|Auto Reconciliation For Status.TransactionSuccessNotifyBuilder|Auto Reconciliation For Status.AutoReconciliationForStatus|Reentry Remittance Status.ReentryRemittanceStatusReply|Reentry Remittance Status.IMTTransactionSuccessNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","IMTHomeSendTransferAbroad","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""IMTHomeSendValidation"">
        <name>IMT HomeSend Validation.</name>
        <description>IMT HomeSend Validation via API.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>

        <state name=""Initiated"">

			<!-- 业务开始，执行业务初始化操作 -->
			<activity id=""Business Initialization"" name=""Business Initialization"" logic=""IMTHomeSendValidationBusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception""/>
				</transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure""/>
                </transition>
			</activity>

			<activity id=""Send Initiated Notification"" name=""Send Initiated Notification"" logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
              	<transition method=""out"" type=""state"" next=""Authorized"">
 					<criteria operator=""eq"" value=""success""/>
 				</transition>
 				<transition method=""out"" type=""state"" next=""Authorized"">
 					<criteria operator=""eq"" value=""exception""/>
 				</transition>
         	</activity>

        </state>

		<state name=""Authorized"">
		 <listener id=""InterventionHandlerWhenAuthorized"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>
			<activity id=""Query AML Watchlist"" name=""Query AML Watchlist"" logic=""IMTAMLProcess"">
 				<transition method=""suspended"" type=""activity"" next=""Query AML Watchlist"">
 					<criteria operator=""eq"" value=""1""/>
 				</transition>
				 <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
 <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         	</activity>
      </state>

        <state name=""Completed"">
            <activity id=""Business Completion"" name=""Business Ending"" logic=""IMTHomeSendValidationBusinessEnding"">
			</activity>
        </state>

        <state name=""Declined"">
          	<activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""IMTHomeSendValidationBusinessDeclinedProcessing""/>
        </state>

        <state name=""Cancelled"">
           	<activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""IMTHomeSendValidationBusinessCancelledProcessing""/>
        </state>

    </template>
</templates>","N","","","Business Initialization.CheckAllowedCustomerSubType|Business Initialization.CheckTransAdditionalData|Business Initialization.CheckerReleaseKYCForIMT|Query AML Watchlist.BS.IMT.SendWatchListActivity|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Completion.SendHomeSendResultWhenStateFinalActivity|Business Cancelled.SendHomeSendResultWhenStateFinalActivity|Business Declined.SendHomeSendResultWhenStateFinalActivity|","IMTHomeSendValidation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""IMTWU"">
      <name>IMT WU.</name>
      <description>IMT WU via API.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""WUBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Send Initiated Notification"" name=""Send Initiated Notification"" logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Authorized Pending Customer Registration"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized Pending Customer Registration"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized Pending Customer Registration"">
         <listener id=""InterventionHandlerWhenPendingReg"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>
         <activity id=""Process Customer Pending Registration"" name=""Process Customer Pending Registration"" logic=""ProcessCustomerPendingRegistration"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized Pending Customer Complete KYC"">
               <criteria operator=""eq"" value=""Register""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>
         <activity id=""Send Notification To Customer To Register"" name=""Send Notification"" logic=""SendNotificationToCustToRegister"">
            <transition method=""suspended"" type=""activity"" next=""Process Customer Pending Registration"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized Pending Customer Complete KYC"">
         <listener id=""InterventionHandlerWhenPendingKYC"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>
         <activity id=""Process Customer Update KYC"" name=""Process Customer Update KYC"" logic=""ProcessCustomerUpdateKYC"">
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Send Notification To Customer To Update KYC"">
               <criteria operator=""eq"" value=""waiting update""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
         </activity>
         <activity id=""Send Notification To Customer To Update KYC"" name=""Send Notification"" logic=""SendNotificationToCustToUpdateKYC"">
            <transition method=""suspended"" type=""activity"" next=""Process Customer Update KYC"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <!--add by check authorization begin-->
      <state name=""Pending Authorized"">
         <!--Send Available Result (Pending) to WU via CSP-AG-->
         <activity id=""Send Available Result for Pending Authorized"" name=""Send Available Result"" logic=""SendIMTAvailableResultActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""sent""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <!--add by check authorization end-->
      <state name=""Authorized"">
         <listener id=""Intervention Handler When Authorized"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Complete Funds"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </listener>
         <activity id=""Check Intervention Operation"" name=""Check Intervention Operation"" logic=""CheckInterventionOperationActivity"" logictype=""bean"">
            <transition method=""out"" type=""activity"" next=""Complete Funds"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
         </activity>

         <activity id=""Send Available Result When Authorized"" name=""Send Available Result"" logic=""SendIMTAvailableResultActivity"" logictype=""bean"">
            <transition method=""suspended"" type=""activity"" next=""Send Receive Money Request"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Send Receive Money Request"">
               <criteria operator=""eq"" value=""sent""/>
            </transition>
         </activity>

         <activity id=""Send Receive Money Request"" name=""Send Receive Money Request"" logic=""SendReceiveMoneyRequest"">
            <transition method=""suspended"" type=""activity"" next=""Send Receive Money Request"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Send Txn Inquiry Request"">
               <criteria operator=""eq"" value=""inquiry""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Query AML Watchlist"">
               <criteria operator=""eq"" value=""complete""/>
            </transition>
         </activity>
         <activity id=""Send Txn Inquiry Request"" name=""Send Txn Inquiry Request"" logic=""SendTransactionInquiryRequest"">
            <transition method=""suspended"" type=""activity"" next=""Send Txn Inquiry Request"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Send Receive Money Request"">
               <criteria operator=""eq"" value=""Resend Money Receive Request""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Query AML Watchlist"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>

          <activity id=""Query AML Watchlist"" name=""Query AML Watchlist"" logic=""IMTAMLProcess"">
 				<transition method=""suspended"" type=""state"" next=""Query AML Watchlist"">
 					<criteria operator=""eq"" value=""1""/>
 				</transition>
				 <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         	</activity>

         <activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""WUBusinessEnding"">
         	 <transition method=""out"" type=""activity"" next=""Send MarketOrder"">
               <criteria operator=""eq"" value=""success""/>
             </transition>
         </activity>
         <activity id=""Send MarketOrder"" name=""Send MarketOrder"" logic=""IMTSendMarketOrder"" logictype=""bean""></activity>
      </state>
      <state name=""Declined"">
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""WUBusinessDeclinedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""WUBusinessCancelledProcessing""/>
      </state>
      <state name=""Expired"">
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""WUBusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Send Available Result for Pending Authorized.SendIMTAvailableResultActivity|Query AML Watchlist.BS.IMT.SendWatchListActivity|Business Initialization.CheckReceiverCustomerType|Business Initialization.CheckTransAdditionalData|Business Initialization.CheckerTransParams|Process Customer Pending Registration.CheckIMTTransactionExpired|Process Customer Pending Registration.ProcessCustomerPendingRegistration|Send Notification To Customer To Register.TransactionSuccessNotifyBuilder|Process Customer Update KYC.CheckIMTTransactionExpired|Process Customer Update KYC.ProcessCustomerUpdateKYC|Send Notification To Customer To Update KYC.TransactionSuccessNotifyBuilder|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send Receive Money Request.SendReceiveMoneyRequestActivity|Send Receive Money Request.ReentryReceiveMoneyReply|Send Txn Inquiry Request.SendTransactionInquiryRequest|Send Txn Inquiry Request.ReentryInquiryReply|Business Cancelled.SendIMTAvailableResultWhenRejectTxn|Business Declined.SendIMTAvailableResultWhenRejectTxn|Process Customer Update KYC.CheckCustomerNeedUpdateKYC|","IMTWU","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""InNetTransaction"">
      <name>In-net Transaction Process</name>
      <description>In-net Transaction Process</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","InNetTransaction","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Indosat Purchase Data Package"">
      <name>Indosat Purchase Data Package.</name>
      <description>Purchase Data Package.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransferWithOutboundCallback</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","Indosat Purchase Data Package","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Indosat Purchase VAS Package"">
      <name>Indosat Purchase VAS Package.</name>
      <description>Purchase VAS Package.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransferWithOutboundCallback</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","Indosat Purchase VAS Package","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Indosat Reload Confirmation"">
      <name>Indosat Reload Confirmation.</name>
      <description>Indosat Reload confirmation transaction process template.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransferWithOutboundCallback</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","Indosat Reload Confirmation","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""InitiateNFCStickerOfflineWallet"">
        <name>Initiate NFC Sticker Offline Wallet.</name>
        <description>Initiate NFC sticker offline wallet process template.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>3rdPartyPaymentWithReversal</ref-template>

    </template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BSD.NFC.SendOfflineWalletTopUpActivity|3rd Reversal.BSD.NFC.SendReverseOfflineWalletTopUpActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","InitiateNFCStickerOfflineWallet","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""IntraAccountTransfer"">
      <name>IntraAccount Transfer.</name>
      <description>IntraAccount Transfer for multiple accounts.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","IntraAccountTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""IntraInterTransfer"">
      <name>Intra and Inter Transfer Business Process</name>
      <description>Intra and Inter Transfer Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","IntraInterTransfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""JournalEntryTransaction"">
      <name>Journal Entry Transaction.</name>
      <description>Journal Entry Transaction.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","JournalEntryTransaction","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Linked Financial Card Voucher Redeeming"">
      <name>Linked Financial Card Voucher Redeeming.</name>
      <description>Linked Financial Card Voucher Redeeming.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Linked Financial Card Voucher Redeeming","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""MiniStatement"">
      <name>Mini Statement.</name>
      <description>Query Mini Statement.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|ActionProcess.BS.Query.QueryMiniStatement|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","MiniStatement","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""NextTransactionSpecialPriceWithRedeemCoupon"">
		<name>NextTransactionSpecialPrice_with_RedeemCoupon.</name>
		<description>NextTransactionSpecialPrice_with_RedeemCoupon.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>TransferWithDirectPending</ref-template>

	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","NextTransactionSpecialPriceWithRedeemCoupon","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""ODRepayment"">
		<name>OD Repayment Business Process</name>
		<description>OD Repayment Business Process</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>
		<state name=""Validated"">

		 <activity id=""Send ODRepayment"" name=""Send ODRepayment""
				logic=""BS.OD.ProcessSendODRepaymentActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""ODRepayment Result"">
					<criteria operator=""eq"" value=""suspended"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""ODRepayment Result"" name=""ODRepayment Result""
				logic=""BS.OD.ProcessSendODRepaymentResultActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Transaction Reserve"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""ODRepayment Result"">
					<criteria operator=""eq"" value=""suspended"" />
				</transition>
			</activity>

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Pending Authorized"">

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

		</state>

		<state name=""Authorized"">
			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Check Transaction Expired"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

            <activity id=""Send ODConfirm"" name=""Send ODConfirm""
				logic=""BS.OD.ProcessSendODConfirmByIsRepaymentActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""ODConfirm Result"">
					<criteria operator=""eq"" value=""suspended"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""ODConfirm Result"" name=""ODConfirm Result""
				logic=""BS.OD.ProcessSendODConfirmResultActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""suspended"" type=""activity"" next=""ODConfirm Result"">
					<criteria operator=""eq"" value=""suspended"" />
				</transition>
			</activity>

            <activity id=""Check Transaction Expired"" name=""Check Transaction Expired""
				logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

			<activity id=""Transaction Complete"" name=""Transaction Complete""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEnding"" logictype=""chain"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

		</state>

		<state name=""Declined"">

			<activity id=""Send ODConfirm With Declined"" name=""Send ODConfirm With Declined""
				logic=""BS.OD.ProcessSendODConfirmByIsRepaymentActivity"" logictype=""bridge"" />

			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
                logic=""BusinessFailedProcessing"" />
        </state>

        <state name=""Cancelled"">

            <activity id=""Send ODConfirm With Cancelled"" name=""Send ODConfirm With Cancelled""
                logic=""BS.OD.ProcessSendODConfirmByIsRepaymentActivity"" logictype=""bridge"" />

            <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
                logic=""BusinessFailedProcessing"" />
        </state>

        <state name=""Expired"">

            <activity id=""Send ODConfirm With Expired"" name=""Send ODConfirm With Expired""
                logic=""BS.OD.ProcessSendODConfirmByIsRepaymentActivity"" logictype=""bridge"" />

            <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
                logic=""BusinessExpiredProcessing"" />
        </state>

    </template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ODRepayment","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""OTCPaymentApplicationValidation"">
      <name>OTC Payment Application Validation.</name>
      <description>OTC Payment Application Validation.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","OTCPaymentApplicationValidation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
     <template id=""Off-net Bulk B2C Payment"">
        <name>Off-net Bulk B2C Payment</name>
        <description>Off-net Bulk B2C Payment</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <state name=""Initiated"">
           <activity id=""Off Net Bulk Business Initialization"" name=""Off Net Bulk Business Initialization"" logic=""OffNetBulkBusinessInitialization"">
              <transition method=""out"" type=""state"" next=""Cancelled"">
                 <criteria operator=""eq"" value=""exception""/>
              </transition>
              <transition method=""out"" type=""state"" next=""Declined"">
                 <criteria operator=""eq"" value=""declined""/>
              </transition>
              <transition method=""out"" type=""state"" next=""Validated"">
                 <criteria operator=""eq"" value=""success""/>
              </transition>
           </activity>
        </state>

      <state name=""Validated"">
       <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
              <transition method=""out"" type=""state"" next=""Declined"">
                 <criteria operator=""eq"" value=""declined""/>
              </transition>
              <transition method=""out"" type=""state"" next=""Authorized"">
                 <criteria operator=""eq"" value=""success""/>
              </transition>
           </activity>
     </state>

     <state name=""Authorized"">

        <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
          <transition name=""complete"" method=""out"" type=""state"" next=""Processed"">
           <criteria operator=""eq"" value=""1""/>
          </transition>
          <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
           <criteria operator=""eq"" value=""2""/>
          </transition>
          <transition method=""out"" type=""state"" next=""Cancelled"">
           <criteria operator=""eq"" value=""exception""/>
          </transition>
       </listener>

       <activity id=""Off-netTransactionRequest"" name=""Off-netTransactionRequest""
         logic=""BS.CrossMNO.OffNetTransactionRequestChain"">
         <transition method=""suspended"" type=""activity""
           next=""Check Off-net Call Back"">
           <criteria operator=""eq"" value=""suspend"" />
         </transition>
         <transition method=""out"" type=""state"" next=""Cancelled"">
           <criteria operator=""eq"" value=""exception"" />
         </transition>
       </activity>

       <activity id=""Check Off-net Call Back"" name=""Check Off-net Call Back""
         logic=""BS.CrossMNO.OffNetAckChain"">
         <transition method=""out"" type=""activity"" next=""Check Transaction Expired Before Complete Funds"">
           <criteria operator=""eq"" value=""success"" />
         </transition>
         <transition method=""out"" type=""state"" next=""Cancelled"">
           <criteria operator=""eq"" value=""failure"" />
         </transition>
         <transition method=""suspended"" type=""activity""
           next=""Check Off-net Call Back"">
           <criteria operator=""eq"" value=""suspend"" />
         </transition>
       </activity>

       <activity id=""Check Transaction Expired Before Complete Funds""
         name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
         logictype=""bean"">
         <transition method=""out"" type=""state"" next=""Expired"">
           <criteria operator=""eq"" value=""expire"" />
         </transition>
         <transition method=""out"" type=""state"" next=""Processed"">
           <criteria operator=""eq"" value=""success"" />
         </transition>
       </activity>

     </state>

        <state name=""Processed"">

           <activity id=""Complete Funds"" name=""Complete Funds"" logic=""TransactionComplete"">
        <transition method=""out"" type=""state"" next=""Completed"">
           <criteria operator=""eq"" value=""success"" />
         </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""Cancelled""/>
              </transition>
        <transition method=""out"" type=""state"" next=""Declined"">
                 <criteria operator=""eq"" value=""declined""/>
              </transition>
       </activity>

        </state>

        <state name=""Completed"">
           <activity id=""Business Completion"" name=""Bulk Business Completion"" logic=""BulkBusinessProcess_BusinessEnding"">
              <transition method=""out"" type=""state"" next=""Cancelled"">
                 <criteria operator=""eq"" value=""Cancelled""/>
              </transition>
           </activity>
        </state>

        <state name=""Declined"">
           <!--It will move on to the next activity in case of exceptions-->
           <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BulkBusinessFailedProcessing""/>
        </state>

        <state name=""Cancelled"">
           <!--It will move on to the next activity in case of exceptions-->
           <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BulkBusinessFailedProcessing""/>
        </state>

        <state name=""Expired"">
           <!--It will move on to the next activity in case of exceptions-->
           <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
        </state>
     </template>
  </templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Off-net Bulk B2C Payment","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""OffNetTransaction"">
      <name>Off-net Transaction Without CNS.</name>
      <description>Off-net Transaction Without CNS.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","OffNetTransaction","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""OfflineWalletAutoTopUp"">
        <name>Offline Wallet Auto Top Up.</name>
        <description>Offline wallet auto top up process template.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>Transfer</ref-template>

    </template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","OfflineWalletAutoTopUp","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""OfflineWalletManualTopUp"">
        <name>Offline Wallet Manual Top Up.</name>
        <description>Offline wallet manual top up process template.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>3rdPartyPaymentWithReversal</ref-template>

    </template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BSD.NFC.SendOfflineWalletTopUpActivity|3rd Reversal.BSD.NFC.SendReverseOfflineWalletTopUpActivity|Transaction Suspend.TransactionSuspendNotifyBuilder|","OfflineWalletManualTopUp","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""OfflineWalletRefund"">
        <name>Offline Wallet Refund.</name>
        <description>Offline wallet refund process template.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>Transfer</ref-template>

    </template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","OfflineWalletRefund","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""OnePhaseAirtimeTransaction"">
        <name>OnePhaseAirtimeTransaction</name>
        <description>OnePhaseAirtimeTransaction.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>DirectTransferWithOutboundCallback</ref-template>

    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.OnePhaseSendEtopUpActivity|","OnePhaseAirtimeTransaction","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <template id=""OrganizationLoan"">
    <name>Organization Loan Business Process</name>
    <description>Organization Loan Business Process</description>
    <version>1</version>
    <entry-point>Initiated</entry-point>
    <ref-template>DirectTransfer</ref-template>
  </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Initialization.BS.Process.CheckerTransactionParam","OrganizationLoan","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""OrganizationRevenueSettlement"">
      <name>Organization Revenue Settlement.</name>
      <description>Organization Revenue Settlement.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","OrganizationRevenueSettlement","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""PDP Payer P2P Transfer"">
    <name>Transfer Business Process</name>
    <description>Transfer With Pending Business Process.</description>
    <version>1</version>
    <entry-point>Initiated</entry-point>
    <state name=""Initiated"">

      <activity id=""Business Initialization"" name=""Business Initialization""
        logic=""BusinessInitialization"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Validated"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>
    </state>

    <state name=""Validated"">

      <activity id=""Transaction Reserve"" name=""Transaction Reserve""
        logic=""TransactionReserve"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Authorized"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>
    </state>


    <state name=""Authorized"">
      <listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Transaction Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
	  </listener>

          <activity id=""Pending Authorization"" name=""Pending Authorization""
        logic=""ProcessAuthorizationWithoutTask"">
        <transition method=""suspended"" type=""activity""
          next=""Pending Authorization"">
          <criteria operator=""eq"" value=""suspend"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""out"" type=""activity"" next=""Transaction Complete"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>

	   <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>

			 <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>

            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
	  </state>

    <state name=""Completed"">

      <activity id=""Business Completion"" name=""Business Ending""
        logic=""BusinessEnding"">
        <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
      </activity>
    </state>

    <state name=""Declined"">

      <!-- It will move on to the next activity in case of exceptions -->
      <activity id=""Business Declined"" name=""BusinessFailedProcessing""
        logic=""BusinessFailedProcessing"" />

    </state>

    <state name=""Cancelled"">

      <!-- It will move on to the next activity in case of exceptions -->
      <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
        logic=""BusinessFailedProcessing"" />

    </state>

    <state name=""Expired"">

      <!-- It will move on to the next activity in case of exceptions -->
      <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
        logic=""BusinessExpiredProcessing"" />

    </state>
  </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","PDP Payer P2P Transfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Pay Bil by Voucher"">
      <name>Pay Bill by Voucher.</name>
      <description>Common pay bill by voucher transaction process template.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherRedeemingForOTC</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BillRefNumberExternalValidationActivity|","Pay Bil by Voucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Pay Bill With Delivery"">
      <name>Pay Bill With Delivery.</name>
      <description>Common pay bill transaction process template.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""3rd Party Reference Number Validation"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""3rd Party Reference Number Validation"" name=""3rd Party Reference Number Validation"" logic=""Pay Bill With Delivery_3rdPartyReferenceNumberValidation"">
            <transition method=""suspended"" type=""activity"" next=""3rd Party Reference Number Validation"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""Pay Bill With Delivery_ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Check Transaction Expired Before Complete Funds"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>

          <activity id=""Send SMS Confirmation Request"" name=""Send SMS Confirmation Request""
				logic=""ProcessSMSDeliveryActivity"" logictype=""bean"">
				<transition method=""suspended"" type=""activity"" next=""Check Transaction Expired"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Check Transaction Expired"" name=""Check Transaction Expired""
				logic=""BS.Process.CheckTransactionExpiredActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
			</activity>

			<activity id=""Check SMS Confirmation"" name=""Check SMS Confirmation""
				logic=""ProcessSMSDeliveryACKActivity"" logictype=""bean"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Send SMS Confirmation Request"">
					<criteria operator=""eq"" value=""timeout"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>

            <activity id=""External Validate BillRefNumber"" name=""External Validate BillRefNumber""
                logic=""BillRefNumberExternalValidationActivity"" logictype=""bean"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity"" next=""Transaction Complete"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check external validate result"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>

            <activity id=""Check external validate result"" name=""Check external validate result""
                logic=""Pay Bill With Delivery_CheckExternalValidationResultActivity"" logictype=""chain"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Check Transaction Expired Before Complete Funds"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Send Notification for TimeOut"">
                    <criteria operator=""eq"" value=""expire"" />
                </transition>
                <transition method=""suspended"" type=""activity""
                    next=""Check external validate result"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
            </activity>

            <activity id=""Send Notification for TimeOut"" name=""Send Notification for TimeOut""
				logic=""Pay Bill With Delivery_SendNotificationforTimeOut"" logictype=""chain"">
				<transition method=""suspended"" type=""activity""
					next=""Check external validate result"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

            <activity id=""Check Transaction Expired Before Complete Funds""
                name=""Check Transaction Expired"" logic=""BS.Process.CheckTransactionExpiredActivity""
                logictype=""bean"">
                <transition method=""out"" type=""state"" next=""Expired"">
                    <criteria operator=""eq"" value=""expire"" />
                </transition>
            </activity>

            <activity id=""Transaction Complete"" name=""Transaction Complete"" logic=""TransactionComplete"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">

         <activity id=""Business Completion"" name=""Business Ending"" logic=""Pay Bill With Delivery_BusinessEnding"" logictype=""chain"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send SMS Confirmation Request.ProcessSMSDeliveryActivity|External Validate BillRefNumber.BillRefNumberExternalValidationActivity|Send Notification for TimeOut.TransactionSuccessNotifyBuilder|","Pay Bill With Delivery","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""Pay Bill by Voucher"">
		<name>Pay Bill by Voucher.</name>
		<description>Common pay bill by voucher transaction process template.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>VoucherRedeemingWith3rd</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BillRefNumberExternalValidationActivity|","Pay Bill by Voucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""PayAirTimeWithSPCommissionCollection"">
      <name>Pay AirTime with SP Commission Collection.</name>
      <description>Pay AirTime with SP Collection of Airtime Commission.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""SP Collection of Airtime Commission"" name=""SP Collection of Airtime Commission"" logic=""SPAirTimeCommissionCollectionActivity"" logictype=""bean""/>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Transaction Reserve"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Send Validated Notification"" name=""Send Validated Notification"" logic=""TransactionSuccessNotifyBuilder"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Continue AirTime Commision Collection"" name=""Continue AirTime Commision Collection"" logic=""ContinueAirTimeCommissionCollectionActivity"" logictype=""bean"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding""/>
      </state>
      <state name=""Declined"">
         <activity id=""Declined AirTime Commision Collection"" name=""Declined AirTime Commision Collection"" logic=""CancelAirTimeCommissionCollectionActivity"" logictype=""bean""/>
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <activity id=""Cancel AirTime Commision Collection"" name=""Cancel AirTime Commision Collection"" logic=""CancelAirTimeCommissionCollectionActivity"" logictype=""bean""/>
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <activity id=""Expire AirTime Commision Collection"" name=""Cancel AirTime Commision Collection"" logic=""CancelAirTimeCommissionCollectionActivity"" logictype=""bean""/>
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","PayAirTimeWithSPCommissionCollection","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
 <templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""PayBillFromBank"">
      <name>Pay Bill From Bank.</name>
      <description>Pay Bill From Bank.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
  	  <ref-template>3rdPartyPaymentFromBankAccount</ref-template>
	</template>
  </templates>","Y","","","Business Initialization.CommonAuthorization||Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Completion.SendRechargeNonFailureNotifyActivity|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Cancelled.SendRechargeFailureNotifyActivity|Business Declined.SendRechargeFailureNotifyActivity|Business Expired.SendRechargeFailureNotifyActivity|Business Initialization.SetBankAccountTypeCashIn|Transaction Suspend.TransactionSuspendNotifyBuilder|Bank Cash In.BS.Reconcile.SendBankCashInRequestBuyAirtime|Bank Cash In Suspend.TransactionSuspendNotifyBuilder|Business Declined.BS.Reconcile.SendBankCashInReversalRequestBuyAirtime|Business Cancelled.BS.Reconcile.SendBankCashInReversalRequestBuyAirtime|Business Expired.BS.Reconcile.SendBankCashInReversalRequestBuyAirtime|3rd Payment.BillRefNumberExternalValidationActivity|","PayBillFromBank","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""PostPaid Bill Payment"">
        <name>PostPaid Bill Payment.</name>
        <description>Indosat postpaid bill payment transaction process template.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>DirectTransferWithOutboundCallback</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Send OutBound Msg Wait Callback.SendGenericOutboundMsg|","PostPaid Bill Payment","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""QueryBalance"">
      <name>Query Balance.</name>
      <description>Query Balance.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|ActionProcess.BS.Query.QueryBalance|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","QueryBalance","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""QueryTransactionViaReceiptNo"">
      <name>Query Transaction Via Receipt No.</name>
      <description>Query Transaction Via Receipt No.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","QueryTransactionViaReceiptNo","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Remittance to M-Wallet Without Confirmation"">
      <name>Remittance to M-Wallet Without Confirmation.</name>
      <description>Remittance to M-Wallet Without Confirmation.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Remittance to M-Wallet Without Confirmation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""Remittance to Unreg"">
		<name>Remittance to Unreg.</name>
		<description>Remittance to Unreg.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>Transfer</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.ProcessCreateRegisteredCustomer|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Remittance to Unreg","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Remittance to Unreg and Voucher Issuing Without Confirmation"">
      <name>Remittance to Unreg and Voucher Issuing Without Confirmation.</name>
      <description>Remittance to Unreg and Voucher Issuing Without Confirmation.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Initialization.InitiateIssueVoucherType|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Remittance to Unreg and Voucher Issuing Without Confirmation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""RemoveVoucher"">
      <name>Remove voucher.</name>
      <description>Remove Voucher.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","RemoveVoucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""ResendVoucher"">
      <name>Resend Voucher.</name>
      <description>Resend Voucher.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ResendVoucher","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""ReversalOffNetTransaction"">
		<name>Reversal Off-net transaction.</name>
		<description>Reversal Off-net transaction.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>ReverseWithConfirmation</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReversalOffNetTransaction","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""ReverseCommissionRollUp"">
		<name>Reverse Commission Roll Up.</name>
		<description>Reverse Commission Roll Up.</description>
		<version>1.0.0</version>
		<entry-point>Initiated</entry-point>
		<ref-template>ReverseTransaction</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseCommissionRollUp","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""ReverseFinance"">
        <name>Reverse Finance.</name>
        <description>Reverse Finance.</description>
        <version>1.0.0</version>
        <entry-point>Initiated</entry-point>
        <ref-template>ReverseTransaction</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseFinance","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""ReverseRequest"">
      <name>Reverse Request.</name>
      <description>Reverse Request.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseRequest","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""ReverseTransaction"">
		<name>Reverse Transaction.</name>
		<description>Reverse Transaction.</description>
		<version>1.0.0</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""ReversalBusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Validated"">
			<activity id=""Business Validation"" name=""Business Validation""
				logic=""ReversalBusinessValidation"">
				<transition method=""out"" type=""activity"" next=""Check Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""activity"" next=""Transaction Reserve for Reversal"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Processed"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Transaction Reserve for Reversal"" name=""Transaction Reserve for Reversal""
				logic=""TransactionReserveForReversal"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>


		</state>

		<state name=""Pending Authorized"">

			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Authorized Check Original Transaction"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""Authorized Check Original Transaction"" name=""Check Original Transaction""
				logic=""CheckOriginalTX4Reverse"" >

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>

			</activity>

			<activity id=""Transaction Complete For Reversal"" name=""Transaction Complete For Reversal""
				logic=""TransactionCompleteForReversal"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Processed"">

			<activity id=""Check Original Transaction"" name=""Check Original Transaction""
				logic=""CheckOriginalTX4Reverse"" >

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>

			</activity>

			<activity id=""Transfer Funds For Reversal"" name=""Transfer Funds For Reversal"" logic=""TransferFundsForReversal"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""ReversalBusinessEnding"">
			</activity>
		</state>

		<state name=""Declined"">

			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""ReversalBusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""ReversalBusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""ReversalBusinessExpiredProcessing"" />

		</state>
	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseTransaction","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""ReverseTransactionCheckDebitOrCredit"">
		<name>ReverseTransactionCheckDebitOrCredit.</name>
		<description>ReverseTransactionCheckDebitOrCredit.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>ReverseTransaction</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Validation.CheckDebitOrCredit|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseTransactionCheckDebitOrCredit","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""ReverseWithConfirmation"">
		<name>Reverse Transaction With Confirmation.</name>
		<description>Reverse Transaction With Confirmation.</description>
		<version>1.0.0</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""ReversalBusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Validated"">

			<activity id=""Business Validation"" name=""Business Validation""
				logic=""ReversalBusinessValidation"">
				<transition method=""out"" type=""activity"" next=""Transaction Reserve for Reversal"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Transaction Reserve for Reversal"" name=""Transaction Reserve for Reversal""
				logic=""TransactionReserveForReversal"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>



		</state>

		<state name=""Pending Authorized"">

			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Authorized Check Original Transaction"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""Confirmation Activity"" name=""Confirmation Activity""
				logic=""ProcessConfirmation"" logictype=""chain"">
				<transition method=""suspended"" type=""activity"" next=""Confirmation Activity"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""cancelled"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Authorized Check Original Transaction"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Authorized Check Original Transaction"" name=""Check Original Transaction""
				logic=""CheckOriginalTX4Reverse"" >

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>

			</activity>

			<activity id=""Transaction Complete For Reversal"" name=""Transaction Complete For Reversal""
				logic=""TransactionCompleteForReversal"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Processed"">

			<activity id=""Check Original Transaction"" name=""Check Original Transaction""
				logic=""CheckOriginalTX4Reverse"" >

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>

			</activity>

			<activity id=""Transfer Funds For Reversal"" name=""Transfer Funds For Reversal"" logic=""TransferFundsForReversal"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""ReversalBusinessEnding"">
			</activity>
		</state>

		<state name=""Declined"">

			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""ReversalBusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""ReversalBusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""ReversalBusinessExpiredProcessing"" />

		</state>
	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder||Confirmation Activity.ProcessSMSDeliveryActivity|","ReverseWithConfirmation","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""ReverseWithdrawFinance"">
        <name>Reverse Withdraw Finance.</name>
        <description>Reverse Withdraw Finance.</description>
        <version>1.0.0</version>
        <entry-point>Initiated</entry-point>
        <ref-template>DirectReverseTransaction</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseWithdrawFinance","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
     <template id=""ReverseWithdrawFinanceWithAuthorization"">
         <name>Reverse Withdraw Finance With Authorization.</name>
         <description>Reverse Withdraw Finance With Authorization.</description>
         <version>1.0.0</version>
         <entry-point>Initiated</entry-point>
         <ref-template>DirectReverseTransactionWithAuthorization</ref-template>
     </template>
 </templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","ReverseWithdrawFinanceWithAuthorization","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Saving Plan Disburse Profit"">
      <name>Saving Plan Disburse Profit</name>
      <description>Saving Plan Disburse Profit.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>Transfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Saving Plan Disburse Profit","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Settlement Revenue Process"">
      <name>Settlement Revenue Process.</name>
      <description>Settlement Revenue Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithDirectPending</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Settlement Revenue Process","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""TransactionProcessForOrgAsCreditParty"">
        <name>Transaction Process For Org As Credit Party</name>
        <description>Transaction Process For Org As Credit Party</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>

        <state name=""Initiated"">

            <!-- 业务开始，执行业务初始化操作 -->
            <activity id=""Business Initialization"" name=""Business Initialization""
                logic=""BusinessInitialization"" logictype=""chain"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                				 <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Validated"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>
        </state>

        <state name=""Validated"">

            <activity id=""Transaction Reserve"" name=""Transaction Reserve""
                logic=""TransactionReserve"">
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
                <transition method=""out"" type=""activity""
                    next=""Credit Org Internal Validation"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>


            <activity id=""Credit Org Internal Validation"" name=""Credit Org Internal Validation""
                logic=""CreditOrgInternalValidation"">
                <transition method=""suspend"" type=""activity""
                    next=""Credit Org Internal Validation"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>

                <transition method=""out"" type=""state"" next=""Pending Authorized"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

        </state>


        <state name=""Pending Authorized"">

            <!-- 检查该业务是否需要MakerChecker -->
            <activity id=""Check Authorization"" name=""Check Authorization""
                logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
                <transition method=""out"" type=""activity"" next=""Raise Task"">
                    <criteria operator=""eq"" value=""true"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""false"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </activity>
            <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
                <transition method=""suspended"" type=""activity"" next=""Raise Task"">
                    <criteria operator=""eq"" value=""raise success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Authorized"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
            </activity>


        </state>

        <state name=""Authorized"">

            <listener id=""Intervention Handler"" name=""Intervention Handler""
                logic=""InterventionHandleActivity"" logictype=""bean"">
                <transition name=""complete"" method=""out"" type=""activity""
                    next=""Transaction Complete"">
                    <criteria operator=""eq"" value=""1"" />
                </transition>
                <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""2"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
            </listener>

            <activity id=""Credit Org External Validation"" name=""Credit Org External Validation""
                logic=""CreditOrgExternalValidation"" >
                <transition method=""out"" type=""activity"" next=""Transaction Complete"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""failure"" />
                </transition>
                <transition method=""out"" type=""state"" next=""Cancelled"">
                    <criteria operator=""eq"" value=""exception"" />
                </transition>
                <transition method=""suspended"" type=""activity"" next=""Credit Org External Validation"">
                    <criteria operator=""eq"" value=""suspend"" />
                </transition>
				 <transition method=""out"" type=""state"" next=""Expired"">
					<criteria operator=""eq"" value=""expire"" />
				</transition>
                <transition method=""out"" type=""activity"" next=""Credit Org External Validation"">
                    <criteria operator=""eq"" value=""resend payment request"" />
                </transition>
            </activity>

            <!-- 调用交易层的交易确认接口，完成交易 -->
            <activity id=""Transaction Complete"" name=""Transaction Complete""
                logic=""TransactionComplete"">
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>

                <transition method=""out"" type=""state"" next=""Completed"">
                    <criteria operator=""eq"" value=""success"" />
                </transition>
            </activity>

        </state>

        <state name=""Completed"">
            <!-- 交易完成后处理 -->
            <activity id=""Business Completion For Credit Org"" name=""Business Ending For Credit Org""
                logic=""BusinessEndingForCreditOrg"" logictype=""chain"">
                <transition method=""out"" type=""state"" next=""Declined"">
                    <criteria operator=""eq"" value=""declined"" />
                </transition>
            </activity>
        </state>

        <state name=""Declined"">

            <!-- It will move on to the next activity in case of exceptions -->
            <activity id=""Business Declined"" name=""BusinessFailedProcessing""
                logic=""BusinessFailedProcessing"" />

        </state>

        <state name=""Cancelled"">

            <!-- It will move on to the next activity in case of exceptions -->
            <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
                logic=""BusinessFailedProcessing"" />

        </state>

        <state name=""Expired"">

            <!-- It will move on to the next activity in case of exceptions -->
            <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
                logic=""BusinessExpiredProcessing"" />

        </state>

    </template>

</templates>","N","","","Credit Org Internal Validation.BS.Process.CreditOrgInternalValidationActivity|Business Initialization.CommonAuthorization|Credit Org External Validation.BS.Process.CreditOrgExternalValidationActivity|Credit Org External Validation.TransactionFailureNotifyBuilderfor3rdParty|Business Completion For Credit Org.BS.Process.CreditOrgBillConfirmationActivity|Business Completion For Credit Org.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransactionProcessForOrgAsCreditParty","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Transfer"">
      <name>Transfer Business Process</name>
      <description>Transfer Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorization"">
            <transition method=""out"" type=""activity"" next=""Transaction Reserve"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
		 <criteria operator=""eq"" value=""failure"" />
	     </transition>
	     <transition method=""out"" type=""state"" next=""Cancelled"">
		 <criteria operator=""eq"" value=""exception"" />
	     </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.VerifyReceiverPIN|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Business Initialization.BS.Process.CheckerTransactionParam","Transfer","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
 <templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""Transfer from Bank"">
      <name>Transfer from Bank</name>
      <description>Transfer from Bank</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
  	  <ref-template>3rdPartyPayment</ref-template>
	</template>
  </templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BS.Reconcile.SendCashInRequestCashIn|Business Initialization.SetBankAccountTypeCashIn|","Transfer from Bank","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Transfer from Bank to CPS Account"">
      <name>Transfer from Bank to CPS Account</name>
      <description>Transfer from Bank to CPS Account</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.SendTransferFromFIOrgRequestActivity|","Transfer from Bank to CPS Account","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Transfer from CPS Account to Bank"">
      <name>Transfer from CPS Account to Bank</name>
      <description>Transfer from CPS Account to Bank</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>3rdPartyPayment</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.SendTransfer2FIOrgRequestActivity|","Transfer from CPS Account to Bank","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""Transfer from CPS Account to Bank With Reversal"">
		<name>Transfer from CPS Account to Bank With Reversal</name>
		<description>Transfer from CPS Account to Bank With Reversal</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>3rdPartyPaymentWithReversal</ref-template>
	</template>

</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|3rd Payment.BS.Reconcile.NotifyCPStoBankRequestActivity|3rd Reversal.BS.Reconcile.SendReversal2FIOrgRequestActivity|","Transfer from CPS Account to Bank With Reversal","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""TransferWithAPIConfirm"">
      <name>Transfer Business Process With Delivery</name>
      <description>Transfer Business Processs With Delivery</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithAPIConfirm","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""TransferWithConfirmation"">
      <name>Transfer Business Process</name>
      <description>Transfer Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Confirmation Activity"" name=""Confirmation Activity"" logic=""ProcessConfirmation"" logictype=""chain"">
            <transition method=""suspended"" type=""activity"" next=""Confirmation Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
              <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""cancelled""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithConfirmation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""TransferWithDelivery"">
      <name>Transfer Business Process With Delivery</name>
      <description>Transfer Business Processs With Delivery</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>TransferWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.ProcessSMSDeliveryActivity|","TransferWithDelivery","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""TransferWithDirectPending"">
      <name>Transfer Business Process</name>
      <description>Transfer With Pending Business Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <activity id=""Pending Authorization"" name=""Pending Authorization"" logic=""ProcessAuthorizationWithoutTask"">
            <transition method=""suspended"" type=""activity"" next=""Pending Authorization"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithDirectPending","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""TransferWithInterventionDirectPending"">
		<name>Transfer Intervention Business Process</name>
		<description>Transfer With Intervention Pending Business Process.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"">
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
			</listener>

			<activity id=""Pending Authorization"" name=""Pending Authorization""
				logic=""ProcessAuthorizationWithoutTask"">
				<transition method=""suspended"" type=""activity""
					next=""Pending Authorization"">
					<criteria operator=""eq"" value=""suspend"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>

			</activity>

			<activity id=""Transaction Complete"" name=""Complete Funds""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEnding"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Cancelled"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedProcessing"" />

		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredProcessing"" />

		</state>
	</template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithInterventionDirectPending","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""TransferWithOD"">
		<name>Transfer Business Process With OD</name>
		<description>Transfer Business Processs With OD</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""BusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Check Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorization"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

		</state>

		<state name=""Pending Authorized"">

			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Transaction Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""OD Record"" name=""OD Record"" logic=""ProcessODRecord"">
				<transition method=""suspended"" type=""activity"" next=""OD Record"">
					<criteria operator=""eq"" value=""suspended"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Transaction Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Transaction Complete"" name=""Complete Funds""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">
			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEndingWithOD"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedWithODProcessing"" />

		</state>

		<state name=""Cancelled"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""BusinessFailedWithODProcessing"" />

		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""BusinessExpiredWithODProcessing"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithOD","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""TransferWithOutboundCallback"">
      <name>Transfer With OutboundCallback Business Process</name>
      <description>Transfer With OutboundCallback Business Processs</description>
      <version>1</version>
      <modle>DirectTransfer_With_Confirm</modle>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
             			 <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Send OutBound Msg Wait Callback"" name=""SendOutboundMsgWaitCallback"" logic=""SendOutboundMsgWaitCallback"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Send Notification Wait Callback"" name=""SendNotificationWaitCallback"" logic=""SendNotificationWaitCallback"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Send Notification Wait Callback.TransSuccessNotifyWaitCallbackBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithOutboundCallback","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""TransferWithPending"">
      <name>Transfer Business Process</name>
      <description>Transfer With Pending Business Process.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""BusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            			<transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Transaction Reserve"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <activity id=""Pending Authorization"" name=""Pending Authorization"" logic=""ProcessAuthorizationWithoutTask"">
            <transition method=""suspended"" type=""activity"" next=""Pending Authorization"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""BusinessFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""BusinessExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","TransferWithPending","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""TransferWithPending4API"">
		<name>Transfer Business Process For API</name>
		<description>Transfer With Pending Business Process For API.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>
		<ref-template>TransferWithPending</ref-template>
	</template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Pending Authorization.TransactionAuthorizationNotifyBuilder|","TransferWithPending4API","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Two Part Direct Transfer"">
      <name>Two Part Direct Transfer.</name>
      <description>Two Part Direct Transfer.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherIssuingWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateIssueVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.CheckSendOtherAuthorizedNotification|Confirmation Activity.TransactionAuthorizationNotifyBuilder|Confirmation Activity.BS.Voucher.ProcessConfirmPartyAuthorizedActivity","Two Part Direct Transfer","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Two Part Payment Confirm"">
      <name>Two Part Payment Confirm.</name>
      <description>Two Part Payment Confirm.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Two Part Payment Confirm","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Two Part Voucher Redeeming"">
      <name>Two Part Voucher Redeeming.</name>
      <description>Two Part Voucher Redeeming Template.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherRedeemingWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.CheckSendOtherAuthorizedNotification|Confirmation Activity.TransactionAuthorizationNotifyBuilder|Confirmation Activity.BS.Voucher.ProcessConfirmPartyAuthorizedActivity","Two Part Voucher Redeeming","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""UpdateCustomerVoucher"">
		<name>Update Customer Voucher.</name>
		<description>Update Voucher state and reverse related liable commission during update customer.</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">
			<activity id=""Business Initialization"" name=""Business Initialization""
        			logic=""UpdateCustomerVoucherInitialization"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
		 <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Business Validation"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Completed"">
          <criteria operator=""eq"" value=""complete"" />
        </transition>
      </activity>

      <activity id=""Business Validation"" name=""Business Validation""
        logic=""UpdateCustomerVoucherValidation"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Processed"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>
    </state>

    <state name=""Processed"">
      <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Completed"">
          <criteria operator=""eq"" value=""success"" />
        </transition>
      </activity>
    </state>

    <state name=""Completed"">
      <activity id=""Business Completion"" name=""Business Ending""
        logic=""UpdateCustomerVoucherBusinessEnding"">
        <transition method=""out"" type=""state"" next=""Declined"">
          <criteria operator=""eq"" value=""declined"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""failure"" />
        </transition>
        <transition method=""out"" type=""state"" next=""Cancelled"">
          <criteria operator=""eq"" value=""exception"" />
        </transition>
      </activity>
    </state>

    <state name=""Declined"">
      <activity id=""Business Declined"" name=""BusinessFailedProcessing""
        logic=""BusinessFailedProcessing"" />

    </state>

    <state name=""Cancelled"">
      <activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
        logic=""BusinessFailedProcessing"" />

    </state>

    <state name=""Expired"">
      <activity id=""Business Expired"" name=""BusinessExpiredProcessing""
        logic=""BusinessExpiredProcessing"" />

    </state>

  </template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","UpdateCustomerVoucher","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Voucher Issuing To Others"">
      <name>Voucher Issuing To Others.</name>
      <description>Voucher Issuing To Others (Only Used in Action
			ReasonType)</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>ActionWithAuthorizationProcess</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Initialization.BS.Voucher.SetterVoucherTypeActivity","Voucher Issuing To Others","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""Voucher Redeeming To Card"">
        <name>Voucher Redeeming To Card.</name>
        <description>Voucher Redeeming To Card.</description>
        <version>1</version>
        <entry-point>Initiated</entry-point>
        <ref-template>VoucherRedeeming</ref-template>
    </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Voucher Redeeming To Card","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Voucher Redeeming To Others"">
      <name>Voucher Redeeming To Others.</name>
      <description>Voucher Redeeming To Others.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherRedeeming</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Voucher Redeeming To Others","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""Voucher Redeeming for Remittance Collect"">
      <name>Voucher Redeeming for Remittance Collect.</name>
      <description>Voucher Redeeming Template for Remittance Collect.</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>DirectTransfer</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","Voucher Redeeming for Remittance Collect","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherIssuing"">
      <name>Voucher Issuing Business Process</name>
      <description>Voucher Issuing Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""VoucherIssuingBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
             			 <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Voucher Reservation"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Voucher Reservation"" name=""Voucher Reservation"" logic=""VoucherIssuingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Voucher Issuing Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Voucher Issuing Complete"" name=""Voucher Issuing Completion"" logic=""VoucherIssuingCompletion"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Voucher Issuing"" name=""Voucher Issuing"" logic=""VoucherIssuing"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""VoucherIssuingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""VoucherIssuingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""VoucherIssuingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateIssueVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherIssuing","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherIssuingWithConfirmation"">
      <name>Voucher Issuing Business Process</name>
      <description>Voucher Issuing Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""VoucherIssuingBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            			 <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Voucher Reservation"" name=""Voucher Reservation"" logic=""VoucherIssuingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Voucher Issuing Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Confirmation Activity"" name=""Confirmation Activity"" logic=""ProcessConfirmation"" logictype=""chain"">
            <transition method=""suspended"" type=""activity"" next=""Confirmation Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""cancelled""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
              <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Voucher Issuing Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Voucher Issuing Complete"" name=""Voucher Issuing Completion"" logic=""VoucherIssuingCompletion"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""VoucherIssuingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""VoucherIssuingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""VoucherIssuingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateIssueVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.ProcessSMSDeliveryActivity|","VoucherIssuingWithConfirmation","1"<endrec>
"<?xml version=""1.0"" encoding=""UTF-8""?>
<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<template id=""VoucherIssuingWithOD"">
		<name>Voucher Issuing Business Process With OD</name>
		<description>Voucher Issuing Business Processs With OD</description>
		<version>1</version>
		<entry-point>Initiated</entry-point>

		<state name=""Initiated"">

			<activity id=""Business Initialization"" name=""Business Initialization""
				logic=""VoucherIssuingBusinessInitialization"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Validated"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>
		</state>

		<state name=""Validated"">

			<activity id=""Voucher Reservation"" name=""Voucher Reservation""
				logic=""VoucherIssuingReservation"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Transaction Reserve"" name=""Transaction Reserve""
				logic=""TransactionReserve"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Check Authorization"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

			<activity id=""Check Authorization"" name=""Check Authorization""
				logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
				<transition method=""out"" type=""state"" next=""Pending Authorized"">
					<criteria operator=""eq"" value=""true"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""false"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

		</state>

		<state name=""Pending Authorized"">

			<activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
				<transition method=""suspended"" type=""activity"" next=""Raise Task"">
					<criteria operator=""eq"" value=""raise success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Authorized"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
			</activity>


		</state>

		<state name=""Authorized"">

			<listener id=""Intervention Handler"" name=""Intervention Handler""
				logic=""InterventionHandleActivity"" logictype=""bean"">
				<transition name=""complete"" method=""out"" type=""activity""
					next=""Voucher Issuing Complete"">
					<criteria operator=""eq"" value=""1"" />
				</transition>
				<transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""2"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</listener>

			<activity id=""OD Record"" name=""OD Record"" logic=""ProcessODRecord"">
				<transition method=""suspended"" type=""activity"" next=""OD Record"">
					<criteria operator=""eq"" value=""suspended"" />
				</transition>
				<transition method=""out"" type=""activity"" next=""Voucher Issuing Complete"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""failure"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Voucher Issuing Complete"" name=""Voucher Issuing Completion""
				logic=""VoucherIssuingCompletion"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
			</activity>

			<activity id=""Transaction Complete"" name=""Complete Funds""
				logic=""TransactionComplete"">
				<transition method=""out"" type=""state"" next=""Cancelled"">
					<criteria operator=""eq"" value=""exception"" />
				</transition>
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>

				<transition method=""out"" type=""state"" next=""Completed"">
					<criteria operator=""eq"" value=""success"" />
				</transition>
			</activity>

		</state>

		<state name=""Completed"">

			<activity id=""Business Completion"" name=""Business Ending""
				logic=""BusinessEndingWithOD"">
				<transition method=""out"" type=""state"" next=""Declined"">
					<criteria operator=""eq"" value=""declined"" />
				</transition>
			</activity>
		</state>

		<state name=""Declined"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Declined"" name=""BusinessFailedProcessing""
				logic=""VoucherIssuingFailedWithODProcessing"" />

		</state>

		<state name=""Cancelled"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Cancelled"" name=""BusinessFailedProcessing""
				logic=""VoucherIssuingFailedWithODProcessing"" />

		</state>

		<state name=""Expired"">

			<!-- It will move on to the next activity in case of exceptions -->
			<activity id=""Business Expired"" name=""BusinessExpiredProcessing""
				logic=""VoucherIssuingExpiredWithODProcessing"" />

		</state>

	</template>

</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateIssueVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherIssuingWithOD","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherRedeeming"">
      <name>Voucher Redeeming Business Process</name>
      <description>Voucher Redeeming Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""VoucherRedeemBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
	     <transition method=""out"" type=""state"" next=""Declined"">
	        <criteria operator=""eq"" value=""declined"" />
	     </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Voucher Redeeming Reservation"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Voucher Redeeming Reservation"" name=""Voucher Redeeming Reservation"" logic=""VoucherRedeemingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Voucher Redeeming Complete"" name=""Voucher Redeem Completion"" logic=""VoucherRedeemingCompletion"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Voucher Redeeming"" name=""Voucher Redeeming"" logic=""VoucherRedeeming"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""VoucherRedeemingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherRedeeming","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherRedeemingForOTC"">
      <name>Voucher Redeeming For OTC Business Process</name>
      <description>Voucher Redeeming For OTC Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""OTCVoucherRedeemBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            			<transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Voucher Reservation"" name=""Voucher Reservation"" logic=""OTCVoucherRedeemingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Voucher Redeeming Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""3rd Payment"" name=""3rd Payment"" logic=""3rdPayment"" logictype=""chain"">
            <transition method=""suspended"" type=""activity"" next=""3rd Payment"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""cancelled""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Voucher Redeeming Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Voucher Redeeming Complete"" name=""Voucher Redeeming Completion"" logic=""OTCVoucherRedeemingCompletion"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""OTCVoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""OTCVoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""OTCVoucherRedeemingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherRedeemingForOTC","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
    <template id=""VoucherRedeemingWith3rd"">
       <name>Voucher Redeeming With 3rd Party Business Process</name>
       <description>Voucher Redeeming 3rd Party Business Processs</description>
       <version>1</version>
       <entry-point>Initiated</entry-point>
       <state name=""Initiated"">
          <activity id=""Business Initialization"" name=""Business Initialization"" logic=""VoucherRedeemBusinessInitialization"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Validated"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Validated"">

          <activity id=""Voucher Redeeming Reservation"" name=""Voucher Redeeming Reservation"" logic=""VoucherRedeemingReservation"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
          <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
		   <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
             <transition method=""out"" type=""state"" next=""Pending Authorized"">
                <criteria operator=""eq"" value=""true""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""false""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </activity>
       </state>
       <state name=""Pending Authorized"">
          <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
             <transition method=""suspended"" type=""activity"" next=""Raise Task"">
                <criteria operator=""eq"" value=""raise success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Authorized"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""failure""/>
             </transition>
          </activity>
       </state>
       <state name=""Authorized"">
          <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
             <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
                <criteria operator=""eq"" value=""1""/>
             </transition>
             <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""2""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
          </listener>

		  <activity id=""3rd Payment"" name=""3rd Payment"" logic=""3rdPayment"" logictype=""chain"">
             <transition method=""suspended"" type=""activity"" next=""3rd Payment"">
                <criteria operator=""eq"" value=""suspend""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Expired"">
                <criteria operator=""eq"" value=""expire""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""cancelled""/>
             </transition>
             <transition method=""out"" type=""activity"" next=""Voucher Redeeming Complete"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>

          <activity id=""Voucher Redeeming Complete"" name=""Voucher Redeem Completion"" logic=""VoucherRedeemingCompletion"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
          <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Completed"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Processed"">
          <activity id=""Voucher Redeeming"" name=""Voucher Redeeming"" logic=""VoucherRedeeming"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
          <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
             <transition method=""out"" type=""state"" next=""Cancelled"">
                <criteria operator=""eq"" value=""exception""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
             <transition method=""out"" type=""state"" next=""Completed"">
                <criteria operator=""eq"" value=""success""/>
             </transition>
          </activity>
       </state>
       <state name=""Completed"">
          <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
             <transition method=""out"" type=""state"" next=""Declined"">
                <criteria operator=""eq"" value=""declined""/>
             </transition>
          </activity>
       </state>
       <state name=""Declined"">
          <!--It will move on to the next activity in case of exceptions-->
          <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
       </state>
       <state name=""Cancelled"">
          <!--It will move on to the next activity in case of exceptions-->
          <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
       </state>
       <state name=""Expired"">
          <!--It will move on to the next activity in case of exceptions-->
          <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""VoucherRedeemingExpiredProcessing""/>
       </state>
    </template>
 </templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherRedeemingWith3rd","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherRedeemingWithAPIConfirm"">
      <name>Voucher Redeeming With API Confrim Business Process</name>
      <description>Voucher Redeeming With API Confirmation Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <ref-template>VoucherRedeemingWithConfirmation</ref-template>
   </template>
</templates>","Y","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherRedeemingWithAPIConfirm","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherRedeemingWithConfirmation"">
      <name>Voucher Redeeming Business Process</name>
      <description>Voucher Redeeming Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""VoucherRedeemBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            			 <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Voucher Reservation"" name=""Voucher Reservation"" logic=""VoucherRedeemingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Voucher Redeeming Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Confirmation Activity"" name=""Confirmation Activity"" logic=""ProcessConfirmation"" logictype=""chain"">
            <transition method=""suspended"" type=""activity"" next=""Confirmation Activity"">
               <criteria operator=""eq"" value=""suspend""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Expired"">
               <criteria operator=""eq"" value=""expire""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""cancelled""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
              <criteria operator=""eq"" value=""failure""/>
            </transition>
            <transition method=""out"" type=""activity"" next=""Voucher Redeeming Complete"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
         <activity id=""Voucher Redeeming Complete"" name=""Voucher Redeeming Completion"" logic=""VoucherRedeemingCompletion"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""VoucherRedeemingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|Confirmation Activity.ProcessSMSDeliveryActivity|","VoucherRedeemingWithConfirmation","1"<endrec>
"<templates xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <template id=""VoucherRedeemingWithrd"">
      <name>Voucher Redeeming Business Process</name>
      <description>Voucher Redeeming Business Processs</description>
      <version>1</version>
      <entry-point>Initiated</entry-point>
      <state name=""Initiated"">
         <activity id=""Business Initialization"" name=""Business Initialization"" logic=""VoucherRedeemBusinessInitialization"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Validated"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Validated"">
         <activity id=""Check Authorization"" name=""Check Authorization"" logic=""CheckerAuthorizationActivity"" logictype=""bridge"">
            <transition method=""out"" type=""activity"" next=""Voucher Redeeming Reservation"">
               <criteria operator=""eq"" value=""true""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Processed"">
               <criteria operator=""eq"" value=""false""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </activity>
         <activity id=""Voucher Redeeming Reservation"" name=""Voucher Redeeming Reservation"" logic=""VoucherRedeemingReservation"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Reserve"" name=""Transaction Reserve"" logic=""TransactionReserve"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Pending Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Pending Authorized"">
         <activity id=""Raise Task"" name=""Raise Task"" logic=""ProcessRaiseUserTask"">
            <transition method=""suspended"" type=""activity"" next=""Raise Task"">
               <criteria operator=""eq"" value=""raise success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Authorized"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""failure""/>
            </transition>
         </activity>
      </state>
      <state name=""Authorized"">
         <listener id=""Intervention Handler"" name=""Intervention Handler"" logic=""InterventionHandleActivity"" logictype=""bean"">
            <transition name=""complete"" method=""out"" type=""activity"" next=""Transaction Complete"">
               <criteria operator=""eq"" value=""1""/>
            </transition>
            <transition name=""cancel"" method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""2""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
         </listener>
         <activity id=""Voucher Redeeming Complete"" name=""Voucher Redeem Completion"" logic=""VoucherRedeemingCompletion"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transaction Complete"" name=""Complete Funds"" logic=""TransactionComplete"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Processed"">
         <activity id=""Voucher Redeeming"" name=""Voucher Redeeming"" logic=""VoucherRedeeming"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
         <activity id=""Transfer Funds"" name=""Transfer Funds"" logic=""TransferFunds"">
            <transition method=""out"" type=""state"" next=""Cancelled"">
               <criteria operator=""eq"" value=""exception""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
            <transition method=""out"" type=""state"" next=""Completed"">
               <criteria operator=""eq"" value=""success""/>
            </transition>
         </activity>
      </state>
      <state name=""Completed"">
         <activity id=""Business Completion"" name=""Business Ending"" logic=""BusinessEnding"">
            <transition method=""out"" type=""state"" next=""Declined"">
               <criteria operator=""eq"" value=""declined""/>
            </transition>
         </activity>
      </state>
      <state name=""Declined"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Declined"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Cancelled"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Cancelled"" name=""BusinessFailedProcessing"" logic=""VoucherRedeemingFailedProcessing""/>
      </state>
      <state name=""Expired"">
         <!--It will move on to the next activity in case of exceptions-->
         <activity id=""Business Expired"" name=""BusinessExpiredProcessing"" logic=""VoucherRedeemingExpiredProcessing""/>
      </state>
   </template>
</templates>","N","","","Business Initialization.CommonAuthorization|Business Initialization.InitiateRedeemVoucherType|Business Completion.TransactionSuccessNotifyBuilder|Business Cancelled.TransactionFailureNotifyBuilder|Business Declined.TransactionFailureNotifyBuilder|Business Expired.TransactionSuccessNotifyBuilder|","VoucherRedeemingWithrd","1"<endrec>
